{
  "stats": {
    "suites": 24,
    "tests": 89,
    "passes": 88,
    "pending": 1,
    "failures": 0,
    "start": "2017-02-24T21:24:33.133Z",
    "end": "2017-02-24T21:25:17.755Z",
    "duration": 44622,
    "testsRegistered": 89,
    "passPercent": 100,
    "pendingPercent": 1.1,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Acceptance test for Locations",
        "suites": [],
        "tests": [
          {
            "title": "obtain the location generate GET /locations",
            "fullTitle": "Acceptance test for Locations obtain the location generate GET /locations",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocation(function (err, res) {\n    expect(res.body[0].name).to.equal(body.name);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "74bab9f1-9c64-47ab-8f4f-645bf51f28de",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "have the same name with it create Post /locations",
            "fullTitle": "Acceptance test for Locations have the same name with it create Post /locations",
            "timedOut": false,
            "duration": 41,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"name\": \"B204\",\n    \"customName\": \"B204\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.body.name).to.equal(bodyJson.name);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2410fd3d-cd69-4763-acd6-19959ee3ffe7",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "obtain the location generate Get /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations obtain the location generate Get /locations/{:locationId }",
            "timedOut": false,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.body._id).to.equal(locationRes._id);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fece2b97-7421-4fb8-9d12-7ed14c732c18",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "have the custom name modify Put /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations have the custom name modify Put /locations/{:locationId }",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.body.customName).to.equal(bodyJson.customName);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fd21f669-c3d0-443b-b347-537d1e052402",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "the locations is deleted Delete /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations the locations is deleted Delete /locations/{:locationId }",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        locations.getLocationById(res.body._id,function (err, res) {\n            expect(res.status).to.equal(404);\n            done();\n        })\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5ec3446c-dd62-4188-ad6b-75ab83696b68",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\LocationsTest.js",
        "uuid": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\LocationsTest.js",
        "passes": [
          {
            "title": "obtain the location generate GET /locations",
            "fullTitle": "Acceptance test for Locations obtain the location generate GET /locations",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocation(function (err, res) {\n    expect(res.body[0].name).to.equal(body.name);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "74bab9f1-9c64-47ab-8f4f-645bf51f28de",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "have the same name with it create Post /locations",
            "fullTitle": "Acceptance test for Locations have the same name with it create Post /locations",
            "timedOut": false,
            "duration": 41,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"name\": \"B204\",\n    \"customName\": \"B204\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.body.name).to.equal(bodyJson.name);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2410fd3d-cd69-4763-acd6-19959ee3ffe7",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "obtain the location generate Get /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations obtain the location generate Get /locations/{:locationId }",
            "timedOut": false,
            "duration": 34,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.body._id).to.equal(locationRes._id);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fece2b97-7421-4fb8-9d12-7ed14c732c18",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "have the custom name modify Put /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations have the custom name modify Put /locations/{:locationId }",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.body.customName).to.equal(bodyJson.customName);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fd21f669-c3d0-443b-b347-537d1e052402",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          },
          {
            "title": "the locations is deleted Delete /locations/{:locationId }",
            "fullTitle": "Acceptance test for Locations the locations is deleted Delete /locations/{:locationId }",
            "timedOut": false,
            "duration": 63,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        locations.getLocationById(res.body._id,function (err, res) {\n            expect(res.status).to.equal(404);\n            done();\n        })\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5ec3446c-dd62-4188-ad6b-75ab83696b68",
            "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 185,
        "rootEmpty": false
      },
      {
        "title": "Acceptance Tests for Login",
        "suites": [],
        "tests": [
          {
            "title": "Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
            "fullTitle": "Acceptance Tests for Login Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.username).to.equal(credentials.username);\n    expect(moment(res.body.createdAt).date()).to.equal(moment().date());\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5e887ebd-c434-4c8c-9fa8-6a979ab4d0d1",
            "parentUUID": "01e53094-3786-4a82-a35a-434970343d4c",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\Login.js",
        "uuid": "01e53094-3786-4a82-a35a-434970343d4c",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\Login.js",
        "passes": [
          {
            "title": "Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
            "fullTitle": "Acceptance Tests for Login Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.username).to.equal(credentials.username);\n    expect(moment(res.body.createdAt).date()).to.equal(moment().date());\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5e887ebd-c434-4c8c-9fa8-6a979ab4d0d1",
            "parentUUID": "01e53094-3786-4a82-a35a-434970343d4c",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 24,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for meetings",
        "suites": [],
        "tests": [
          {
            "title": "Get /rooms/{:roomId}/meetings",
            "fullTitle": "Smoke test for meetings Get /rooms/{:roomId}/meetings",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].roomId).to.equal(room._id);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9f505ffc-aad3-4cc1-8c1e-52bc2df4e774",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    expect(res.body[0].customName).to.equal(body.customName);\n    expect(res.body[0].title).to.equal(body.title);\n    expect(res.body[0].roomEmail).to.equal(body.roomEmail);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "cc3fd593-e1c9-4760-9919-010432497627",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meeting_status).to.equal(expectedStatus);\nexpect(meetingRes.organizer).to.equal(body.organizer);\nexpect(meetingRes.serviceId).to.equal(service._id);\nexpect(meetingRes.roomId).to.equal(room._id);\nexpect(meetingRes.roomEmail).to.equal(body.roomEmail);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "82da2f4c-b233-4c77-bf9d-5c2ce094957c",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(meetingRes.organizer).to.equal(body.organizer);\n    expect(meetingRes.serviceId).to.equal(service._id);\n    expect(meetingRes.roomId).to.equal(room._id);\n    expect(meetingRes._id).to.equal(meeting_id);\n    expect(meetingRes.roomEmail).to.equal(body.roomEmail);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1935eabc-3e54-4e4a-810a-70352f38c10a",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 875,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.organizer).to.equal(body.organizer);\n    expect(res.body.serviceId).to.equal(service._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body._id).to.equal(meeting_id);\n    expect(res.body.roomEmail).to.equal(body.roomEmail);\n    expect(res.body.title).to.equal(meetingChanged.title);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "3eafa1d4-d3dc-49b6-af0a-f09fe2da1e0f",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meetingDel_status).to.equal(expectedStatus);\nexpect(meetingDel.organizer).to.equal(body.organizer);\nexpect(meetingDel.serviceId).to.equal(service._id);\nexpect(meetingDel.roomId).to.equal(room._id);\nexpect(meetingDel.kind).to.equal('meeting');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "7560d067-272f-4377-a5b7-521145c47c50",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\MeetingsTest.js",
        "uuid": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\MeetingsTest.js",
        "passes": [
          {
            "title": "Get /rooms/{:roomId}/meetings",
            "fullTitle": "Smoke test for meetings Get /rooms/{:roomId}/meetings",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].roomId).to.equal(room._id);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9f505ffc-aad3-4cc1-8c1e-52bc2df4e774",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    expect(res.body[0].customName).to.equal(body.customName);\n    expect(res.body[0].title).to.equal(body.title);\n    expect(res.body[0].roomEmail).to.equal(body.roomEmail);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "cc3fd593-e1c9-4760-9919-010432497627",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meeting_status).to.equal(expectedStatus);\nexpect(meetingRes.organizer).to.equal(body.organizer);\nexpect(meetingRes.serviceId).to.equal(service._id);\nexpect(meetingRes.roomId).to.equal(room._id);\nexpect(meetingRes.roomEmail).to.equal(body.roomEmail);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "82da2f4c-b233-4c77-bf9d-5c2ce094957c",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(meetingRes.organizer).to.equal(body.organizer);\n    expect(meetingRes.serviceId).to.equal(service._id);\n    expect(meetingRes.roomId).to.equal(room._id);\n    expect(meetingRes._id).to.equal(meeting_id);\n    expect(meetingRes.roomEmail).to.equal(body.roomEmail);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1935eabc-3e54-4e4a-810a-70352f38c10a",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 875,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.organizer).to.equal(body.organizer);\n    expect(res.body.serviceId).to.equal(service._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body._id).to.equal(meeting_id);\n    expect(res.body.roomEmail).to.equal(body.roomEmail);\n    expect(res.body.title).to.equal(meetingChanged.title);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "3eafa1d4-d3dc-49b6-af0a-f09fe2da1e0f",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 1,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meetingDel_status).to.equal(expectedStatus);\nexpect(meetingDel.organizer).to.equal(body.organizer);\nexpect(meetingDel.serviceId).to.equal(service._id);\nexpect(meetingDel.roomId).to.equal(room._id);\nexpect(meetingDel.kind).to.equal('meeting');\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "7560d067-272f-4377-a5b7-521145c47c50",
            "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 936,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Out-Of-Orders",
        "suites": [],
        "tests": [
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0]._id).to.equal(outOfOrder_body._id);\n    expect(res.body[0].roomId).to.equal(room_body[0]._id);\n    expect(res.body[0].title).to.equal(orderJson.title);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "7017c57e-062e-4f75-97f6-c3124f0f3d55",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(outOfOrder_status).to.equal(expectedStatus);\nexpect(outOfOrder_body.roomId).to.equal(room._id);\nexpect(outOfOrder_body.title).to.equal(orderJson.title);\nexpect(orderJson.sendEmail).to.be.false;\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "1ce292ee-46b0-401f-8549-13bc402244f3",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(orderJson.title);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "71c9c455-014e-47ac-8645-047ee3803523",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 40,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(bodyChanged.title);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "73697a06-f025-4e20-9b33-6b19df830366",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "87cbc13f-1d4c-4c88-b20d-da401f419451",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\OutOfOrdersTest.js",
        "uuid": "6197392d-8aed-4722-a662-fb4af719faf8",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\OutOfOrdersTest.js",
        "passes": [
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0]._id).to.equal(outOfOrder_body._id);\n    expect(res.body[0].roomId).to.equal(room_body[0]._id);\n    expect(res.body[0].title).to.equal(orderJson.title);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "7017c57e-062e-4f75-97f6-c3124f0f3d55",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(outOfOrder_status).to.equal(expectedStatus);\nexpect(outOfOrder_body.roomId).to.equal(room._id);\nexpect(outOfOrder_body.title).to.equal(orderJson.title);\nexpect(orderJson.sendEmail).to.be.false;\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "1ce292ee-46b0-401f-8549-13bc402244f3",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(orderJson.title);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "71c9c455-014e-47ac-8645-047ee3803523",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 40,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(bodyChanged.title);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "73697a06-f025-4e20-9b33-6b19df830366",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "87cbc13f-1d4c-4c88-b20d-da401f419451",
            "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 99,
        "rootEmpty": false
      },
      {
        "title": "Acceptance Tests for Resources",
        "suites": [],
        "tests": [
          {
            "title": "Get /resources",
            "fullTitle": "Acceptance Tests for Resources Get /resources",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumResources);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a3cb8916-d56f-4fce-80b7-76404705a36f",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Post /resources",
            "fullTitle": "Acceptance Tests for Resources Post /resources",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePostResourceStatus).to.equal(expectedStatus);\nexpect(responsePostResourceBody.name).to.equal(resourcesConfig.postBody.name);\nexpect(responsePostResourceBody.customName).to.equal(resourcesConfig.postBody.customName);\nexpect(responsePostResourceBody.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\nexpect(responsePostResourceBody.from).to.equal(resourcesConfig.postBody.from);\nexpect(responsePostResourceBody.description).to.equal(resourcesConfig.postBody.description);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "4fd028a0-6f83-4162-a60a-7b9657dbb149",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Get /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Get /resources/{resourceId}",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4459d488-0153-4c69-9161-87542900ad1f",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Put /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Put /resources/{resourceId}",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.putResource(responsePostResourceBody._id, resourcesConfig.putBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.putBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.putBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.putBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.putBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.putBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c2397f12-80d3-4510-afdc-1abd986803b6",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Delete /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Delete /resources/{resourceId}",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.deleteResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a2ff0991-83f6-414c-97d3-d9fb568f9ed5",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\ResourcesTest.js",
        "uuid": "03aff426-9945-407d-8c2a-c257de229f69",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\ResourcesTest.js",
        "passes": [
          {
            "title": "Get /resources",
            "fullTitle": "Acceptance Tests for Resources Get /resources",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumResources);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a3cb8916-d56f-4fce-80b7-76404705a36f",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Post /resources",
            "fullTitle": "Acceptance Tests for Resources Post /resources",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePostResourceStatus).to.equal(expectedStatus);\nexpect(responsePostResourceBody.name).to.equal(resourcesConfig.postBody.name);\nexpect(responsePostResourceBody.customName).to.equal(resourcesConfig.postBody.customName);\nexpect(responsePostResourceBody.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\nexpect(responsePostResourceBody.from).to.equal(resourcesConfig.postBody.from);\nexpect(responsePostResourceBody.description).to.equal(resourcesConfig.postBody.description);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "4fd028a0-6f83-4162-a60a-7b9657dbb149",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Get /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Get /resources/{resourceId}",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4459d488-0153-4c69-9161-87542900ad1f",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Put /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Put /resources/{resourceId}",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.putResource(responsePostResourceBody._id, resourcesConfig.putBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.putBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.putBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.putBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.putBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.putBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c2397f12-80d3-4510-afdc-1abd986803b6",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          },
          {
            "title": "Delete /resources/{resourceId}",
            "fullTitle": "Acceptance Tests for Resources Delete /resources/{resourceId}",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.deleteResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a2ff0991-83f6-414c-97d3-d9fb568f9ed5",
            "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 75,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for resources of rooms",
        "suites": [],
        "tests": [
          {
            "title": "The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 47,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(resourceRes._id).to.equal(res.body.resourceId);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "0ceee338-ccd2-4eab-bef5-8c9023c1bb1e",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 49,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var quantityModify = 10;\nvar jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": quantityModify}, function (err, res) {\n        expect(res.body.resources[0].quantity).to.equal(quantityModify);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5e83f86e-0cd3-431d-9bba-d8c74245322f",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "return the resources GET /rooms/{:roomId}/resources",
            "fullTitle": "Smoke test for resources of rooms return the resources GET /rooms/{:roomId}/resources",
            "timedOut": false,
            "duration": 40,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n            resourceId: resourceRes._id,\n            quantity: 5\n        };\n        var joinResource;\n        room_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n            joinResource = res.body;\n            room_resources.getResourcesByRoom(room._id, function (err, res) {\n                expect(res.body[0]._id).to.equal(joinResource.resources[0]._id);\n                done();\n            })\n        })",
            "err": {},
            "isRoot": false,
            "uuid": "36f1dab7-0970-400c-8614-08a3952f18e0",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "the resource is created POST /rooms/{:roomId}/resources/",
            "fullTitle": "Smoke test for resources of rooms the resource is created POST /rooms/{:roomId}/resources/",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n    expect(resourceRes._id).to.equal(res.body.resources[0].resourceId);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "18f30844-2d35-4835-998e-596f3044326d",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\RoomResourcesTest.js",
        "uuid": "040d4bdc-6038-4c93-b400-85fce3bdb115",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\RoomResourcesTest.js",
        "passes": [
          {
            "title": "The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 47,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(resourceRes._id).to.equal(res.body.resourceId);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "0ceee338-ccd2-4eab-bef5-8c9023c1bb1e",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 49,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var quantityModify = 10;\nvar jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": quantityModify}, function (err, res) {\n        expect(res.body.resources[0].quantity).to.equal(quantityModify);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5e83f86e-0cd3-431d-9bba-d8c74245322f",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "return the resources GET /rooms/{:roomId}/resources",
            "fullTitle": "Smoke test for resources of rooms return the resources GET /rooms/{:roomId}/resources",
            "timedOut": false,
            "duration": 40,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n            resourceId: resourceRes._id,\n            quantity: 5\n        };\n        var joinResource;\n        room_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n            joinResource = res.body;\n            room_resources.getResourcesByRoom(room._id, function (err, res) {\n                expect(res.body[0]._id).to.equal(joinResource.resources[0]._id);\n                done();\n            })\n        })",
            "err": {},
            "isRoot": false,
            "uuid": "36f1dab7-0970-400c-8614-08a3952f18e0",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          },
          {
            "title": "the resource is created POST /rooms/{:roomId}/resources/",
            "fullTitle": "Smoke test for resources of rooms the resource is created POST /rooms/{:roomId}/resources/",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n    expect(resourceRes._id).to.equal(res.body.resources[0].resourceId);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "18f30844-2d35-4835-998e-596f3044326d",
            "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 4,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 157,
        "rootEmpty": false
      },
      {
        "title": "Acceptance tests for Rooms endpoint",
        "suites": [],
        "tests": [
          {
            "title": "Get /Rooms returns all rooms",
            "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms returns all rooms",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumRoomsExpected);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9a545ff4-a365-4d80-b3f9-64a599fdfece",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          },
          {
            "title": "Put /Rooms/{roomId} returns the first room modified",
            "fullTitle": "Acceptance tests for Rooms endpoint Put /Rooms/{roomId} returns the first room modified",
            "timedOut": false,
            "duration": 65,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var modifiedRoom = {\n    displayName: 'GualyVc',\n    customDisplayName: 'GualyVc'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    var putRoomBody = res.body;\n    expect(putRoomBody.displayName).to.equal(modifiedRoom.displayName)\n    expect(putRoomBody.customDisplayName).to.equal(modifiedRoom.customDisplayName)\n    expect(putRoomBody._id).to.be.equal(room._id)\n    expect(putRoomBody.serviceId).to.be.equal(room.serviceId)\n    expect(putRoomBody.enable).to.be.equal(room.enable)\n    expect(res.status).to.equal(expectedStatus);\n    var recoverRoom = {\n        displayName: room.displayName,\n        customDisplayName: room.customDisplayName\n    };\n    rooms.putRoomsById(room._id, recoverRoom, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "da482acf-cca0-47b3-bd6b-e95912e846ec",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          },
          {
            "title": "Get /Rooms/{roomId} - returns an specific Room by its Id",
            "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms/{roomId} - returns an specific Room by its Id",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRoomsById(room._id, function (err, res) {\n    var getRoomByIdBody = res.body;\n    expect(getRoomByIdBody._id).to.equal(room._id)\n    expect(getRoomByIdBody.displayName).to.equal(room.displayName)\n    expect(getRoomByIdBody.customDisplayName).to.equal(room.customDisplayName)\n    expect(getRoomByIdBody.serviceId).to.equal(room.serviceId)\n    expect(getRoomByIdBody.enable).to.equal(room.enable)\n    expect(getRoomByIdBody.Url).to.equal(room.Url)\n    expect(getRoomByIdBody.__v).to.equal(room.__v)\n    expect(getRoomByIdBody.locationId).to.equal(room.locationId)\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3e52cdd4-2f76-4013-8852-3f901718689b",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\Rooms.js",
        "uuid": "36390fc1-9d88-4035-a335-99e4794fbd4d",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\Rooms.js",
        "passes": [
          {
            "title": "Get /Rooms returns all rooms",
            "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms returns all rooms",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumRoomsExpected);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9a545ff4-a365-4d80-b3f9-64a599fdfece",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          },
          {
            "title": "Put /Rooms/{roomId} returns the first room modified",
            "fullTitle": "Acceptance tests for Rooms endpoint Put /Rooms/{roomId} returns the first room modified",
            "timedOut": false,
            "duration": 65,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var modifiedRoom = {\n    displayName: 'GualyVc',\n    customDisplayName: 'GualyVc'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    var putRoomBody = res.body;\n    expect(putRoomBody.displayName).to.equal(modifiedRoom.displayName)\n    expect(putRoomBody.customDisplayName).to.equal(modifiedRoom.customDisplayName)\n    expect(putRoomBody._id).to.be.equal(room._id)\n    expect(putRoomBody.serviceId).to.be.equal(room.serviceId)\n    expect(putRoomBody.enable).to.be.equal(room.enable)\n    expect(res.status).to.equal(expectedStatus);\n    var recoverRoom = {\n        displayName: room.displayName,\n        customDisplayName: room.customDisplayName\n    };\n    rooms.putRoomsById(room._id, recoverRoom, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "da482acf-cca0-47b3-bd6b-e95912e846ec",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          },
          {
            "title": "Get /Rooms/{roomId} - returns an specific Room by its Id",
            "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms/{roomId} - returns an specific Room by its Id",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRoomsById(room._id, function (err, res) {\n    var getRoomByIdBody = res.body;\n    expect(getRoomByIdBody._id).to.equal(room._id)\n    expect(getRoomByIdBody.displayName).to.equal(room.displayName)\n    expect(getRoomByIdBody.customDisplayName).to.equal(room.customDisplayName)\n    expect(getRoomByIdBody.serviceId).to.equal(room.serviceId)\n    expect(getRoomByIdBody.enable).to.equal(room.enable)\n    expect(getRoomByIdBody.Url).to.equal(room.Url)\n    expect(getRoomByIdBody.__v).to.equal(room.__v)\n    expect(getRoomByIdBody.locationId).to.equal(room.locationId)\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3e52cdd4-2f76-4013-8852-3f901718689b",
            "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 135,
        "rootEmpty": false
      },
      {
        "title": "Acceptance tests for Services/Room/Resources endpoint",
        "suites": [],
        "tests": [
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
            "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0];\n    expect(res.status).to.equal(expectedStatus);\n    expect(resourceIdInARoom._id).to.equal(responsePost.body.resources[0]._id);\n    expect(resourceIdInARoom.quantity).to.equal(responsePost.body.resources[0].quantity)\n    expect(resourceIdInARoom.resourceId).to.equal(responsePost.body.resources[0].resourceId)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "23bbc198-89ee-402c-aa38-b1f36be5e0bf",
            "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
            "skipped": false
          },
          {
            "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
            "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "ace166a4-331a-4df2-9309-56f64996b50e",
            "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\ServiceRoomResources.js",
        "uuid": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\ServiceRoomResources.js",
        "passes": [
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
            "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
            "timedOut": false,
            "duration": 35,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0];\n    expect(res.status).to.equal(expectedStatus);\n    expect(resourceIdInARoom._id).to.equal(responsePost.body.resources[0]._id);\n    expect(resourceIdInARoom.quantity).to.equal(responsePost.body.resources[0].quantity)\n    expect(resourceIdInARoom.resourceId).to.equal(responsePost.body.resources[0].resourceId)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "23bbc198-89ee-402c-aa38-b1f36be5e0bf",
            "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
            "skipped": false
          },
          {
            "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
            "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "ace166a4-331a-4df2-9309-56f64996b50e",
            "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 2,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 35,
        "rootEmpty": false
      },
      {
        "title": "Acceptance test for Services",
        "suites": [],
        "tests": [
          {
            "title": "Get /services",
            "fullTitle": "Acceptance test for Services Get /services",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumServices);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "6262a771-16af-41d3-8f01-162f7a61b929",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Post /services",
            "fullTitle": "Acceptance test for Services Post /services",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(postResponseStatus).to.equal(expectedStatus);\nexpect(postResponseBody.credential.username).to.equal(postBody.username);\nexpect(postResponseBody.serviceUrl.includes(postBody.hostname)).to.be.true;\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "4dd98505-cc1a-46a4-ad41-600a4ad03525",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}",
            "fullTitle": "Acceptance test for Services Get /services/{serviceId}",
            "timedOut": false,
            "duration": 43,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.credential.username).to.equal(postBody.username);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c2812d46-5c6b-4d27-bfca-368a7a127b48",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId}",
            "fullTitle": "Acceptance test for Services Delete /services/{serviceId}",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.deleteService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    expect(res.body.type).to.equal(credentials.serviceType);\n    expect(res.body.name).to.equal(credentials.serviceName);\n    expect(res.body.version).to.equal(credentials.serviceVersion);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "93180082-4c26-43d8-acd0-fe125547ef4e",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}",
            "fullTitle": "Acceptance test for Services Get /services/{:serviceId}/rooms/{:roomId}",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getARoomOfAService(postResponseBody._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(room._id);\n    expect(res.body.serviceId).to.equal(postResponseBody._id);\n    expect(res.body.emailAddress).to.equal(room.emailAddress);\n    expect(res.body.displayName).to.equal(room.displayName);\n    expect(res.body.enabled).to.equal(room.enabled);\n    expect(res.body.locationId).to.equal(room.locationId);\n    expect(res.body.customDisplayName).to.equal(room.customDisplayName);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "223060df-ca9b-469c-955c-02e4453e8b99",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\Services.js",
        "uuid": "34d8772e-1a63-495e-8311-7b88da5a8e05",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\Services.js",
        "passes": [
          {
            "title": "Get /services",
            "fullTitle": "Acceptance test for Services Get /services",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumServices);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "6262a771-16af-41d3-8f01-162f7a61b929",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Post /services",
            "fullTitle": "Acceptance test for Services Post /services",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(postResponseStatus).to.equal(expectedStatus);\nexpect(postResponseBody.credential.username).to.equal(postBody.username);\nexpect(postResponseBody.serviceUrl.includes(postBody.hostname)).to.be.true;\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "4dd98505-cc1a-46a4-ad41-600a4ad03525",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}",
            "fullTitle": "Acceptance test for Services Get /services/{serviceId}",
            "timedOut": false,
            "duration": 43,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.credential.username).to.equal(postBody.username);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c2812d46-5c6b-4d27-bfca-368a7a127b48",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId}",
            "fullTitle": "Acceptance test for Services Delete /services/{serviceId}",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.deleteService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    expect(res.body.type).to.equal(credentials.serviceType);\n    expect(res.body.name).to.equal(credentials.serviceName);\n    expect(res.body.version).to.equal(credentials.serviceVersion);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "93180082-4c26-43d8-acd0-fe125547ef4e",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}",
            "fullTitle": "Acceptance test for Services Get /services/{:serviceId}/rooms/{:roomId}",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getARoomOfAService(postResponseBody._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(room._id);\n    expect(res.body.serviceId).to.equal(postResponseBody._id);\n    expect(res.body.emailAddress).to.equal(room.emailAddress);\n    expect(res.body.displayName).to.equal(room.displayName);\n    expect(res.body.enabled).to.equal(room.enabled);\n    expect(res.body.locationId).to.equal(room.locationId);\n    expect(res.body.customDisplayName).to.equal(room.customDisplayName);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "223060df-ca9b-469c-955c-02e4453e8b99",
            "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 128,
        "rootEmpty": false
      },
      {
        "title": "Acceptance test for Service-Types",
        "suites": [],
        "tests": [
          {
            "title": "Get /service-types returns 200",
            "fullTitle": "Acceptance test for Service-Types Get /service-types returns 200",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].name).to.equal(serviceTypesJson.serviceName);\n    expect(res.body[0].version).to.equal(serviceTypesJson.serviceVersion);\n    expect(res.body[0].support[0]).to.equal(serviceTypesJson.support);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "acf2f721-4168-4ebf-8885-a6ec0776d456",
            "parentUUID": "501d7c3a-0539-452c-80ed-fa54e74f8fa1",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\acceptance\\ServiceTypesTest.js",
        "uuid": "501d7c3a-0539-452c-80ed-fa54e74f8fa1",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\acceptance\\ServiceTypesTest.js",
        "passes": [
          {
            "title": "Get /service-types returns 200",
            "fullTitle": "Acceptance test for Service-Types Get /service-types returns 200",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].name).to.equal(serviceTypesJson.serviceName);\n    expect(res.body[0].version).to.equal(serviceTypesJson.serviceVersion);\n    expect(res.body[0].support[0]).to.equal(serviceTypesJson.support);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "acf2f721-4168-4ebf-8885-a6ec0776d456",
            "parentUUID": "501d7c3a-0539-452c-80ed-fa54e74f8fa1",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 37,
        "rootEmpty": false
      },
      {
        "title": "Reassign the disable conference room",
        "suites": [
          {
            "title": "Given I have a disabled conference room (Tarata)",
            "suites": [],
            "tests": [
              {
                "title": "And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
                "timedOut": false,
                "duration": 114,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var locationJson = {\n                name: \"Jalasoft\",\n                customName: \"Jalasoft\",\n                description: \"bla bla\"\n            };\n            locations.postLocation(locationJson, function (err1, res1) {\n                idJala = res1.body._id;\n                var locationsTwo = {\n                    name: \"PlantaBaja\",\n                    customName: \"PlantaBaja\",\n                    parentId: res1.body._id\n                };\n                locations.postLocation(locationsTwo, function (err2, res2) {\n                    idPlantaBaja = res2.body._id;\n                    var jsonLocation = {\n                        locationId: res2.body._id\n                    };\n                    rooms.putRoomsById(idRoomTarata, jsonLocation, function (err, res) {\n                        done();\n                    });\n                });\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "328ba63a-6a4d-49f7-b01c-291325132e15",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              },
              {
                "title": "And I have the location (JalasoftPlanta BajaPueblito)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have the location (JalasoftPlanta BajaPueblito)",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var locationsThree = {\n    name: \"Pueblito\",\n    customName: \"Pueblito\",\n    parentId: idPlantaBaja\n};\nlocations.postLocation(locationsThree, function (err, res) {\n    idPueblito = res.body._id;\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "111fb308-6541-4ff9-b54a-224e3b8daa14",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              },
              {
                "title": "And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
                "timedOut": false,
                "duration": 27,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.putRoomsById(roomsRes[2]._id, {locationId: idPueblito}, function (err, res) {\n                done();\n            })",
                "err": {},
                "isRoot": false,
                "uuid": "1f0093fb-0118-4f9c-9f0a-4beee3c1d13e",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 3000,
            "file": "\\test\\bdt\\ConferenceTest.js",
            "uuid": "52adac88-39fd-4971-8744-a5977a47c119",
            "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\bdt\\ConferenceTest.js",
            "passes": [
              {
                "title": "And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
                "timedOut": false,
                "duration": 114,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var locationJson = {\n                name: \"Jalasoft\",\n                customName: \"Jalasoft\",\n                description: \"bla bla\"\n            };\n            locations.postLocation(locationJson, function (err1, res1) {\n                idJala = res1.body._id;\n                var locationsTwo = {\n                    name: \"PlantaBaja\",\n                    customName: \"PlantaBaja\",\n                    parentId: res1.body._id\n                };\n                locations.postLocation(locationsTwo, function (err2, res2) {\n                    idPlantaBaja = res2.body._id;\n                    var jsonLocation = {\n                        locationId: res2.body._id\n                    };\n                    rooms.putRoomsById(idRoomTarata, jsonLocation, function (err, res) {\n                        done();\n                    });\n                });\n            });",
                "err": {},
                "isRoot": false,
                "uuid": "328ba63a-6a4d-49f7-b01c-291325132e15",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              },
              {
                "title": "And I have the location (JalasoftPlanta BajaPueblito)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have the location (JalasoftPlanta BajaPueblito)",
                "timedOut": false,
                "duration": 24,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var locationsThree = {\n    name: \"Pueblito\",\n    customName: \"Pueblito\",\n    parentId: idPlantaBaja\n};\nlocations.postLocation(locationsThree, function (err, res) {\n    idPueblito = res.body._id;\n    done();\n})",
                "err": {},
                "isRoot": false,
                "uuid": "111fb308-6541-4ff9-b54a-224e3b8daa14",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              },
              {
                "title": "And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
                "fullTitle": "Reassign the disable conference room Given I have a disabled conference room (Tarata) And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
                "timedOut": false,
                "duration": 27,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.putRoomsById(roomsRes[2]._id, {locationId: idPueblito}, function (err, res) {\n                done();\n            })",
                "err": {},
                "isRoot": false,
                "uuid": "1f0093fb-0118-4f9c-9f0a-4beee3c1d13e",
                "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 165,
            "rootEmpty": false
          },
          {
            "title": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito)",
            "suites": [],
            "tests": [
              {
                "title": "Then  Tarata is correctly assigned to the new location",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) Then  Tarata is correctly assigned to the new location",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(resTarataPueblito.status).to.equal(expectedStatus);\nexpect(resTarataPueblito.body.locationId).to.equal(idPueblito);",
                "err": {},
                "isRoot": false,
                "uuid": "f94c2b36-520f-46b6-93ee-52a07e484d37",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And Tarata status is still disabled",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And Tarata status is still disabled",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(resTarataPueblito.body.enabled).to.be.false;",
                "err": {},
                "isRoot": false,
                "uuid": "2ba1c36b-0e74-42a1-bc3d-a77e8a1954e4",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPueblito).forEach(y => value++);\n    expect(value).to.equal(2);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7ae5a4ff-ccd6-47bd-9595-1749526661ff",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPlantaBaja).forEach(y => value++);\n    expect(value).to.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3979c1b6-822a-494e-a327-d8876d1f3a15",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 3000,
            "file": "\\test\\bdt\\ConferenceTest.js",
            "uuid": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
            "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\bdt\\ConferenceTest.js",
            "passes": [
              {
                "title": "Then  Tarata is correctly assigned to the new location",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) Then  Tarata is correctly assigned to the new location",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(resTarataPueblito.status).to.equal(expectedStatus);\nexpect(resTarataPueblito.body.locationId).to.equal(idPueblito);",
                "err": {},
                "isRoot": false,
                "uuid": "f94c2b36-520f-46b6-93ee-52a07e484d37",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And Tarata status is still disabled",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And Tarata status is still disabled",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "expect(resTarataPueblito.body.enabled).to.be.false;",
                "err": {},
                "isRoot": false,
                "uuid": "2ba1c36b-0e74-42a1-bc3d-a77e8a1954e4",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
                "timedOut": false,
                "duration": 19,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPueblito).forEach(y => value++);\n    expect(value).to.equal(2);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "7ae5a4ff-ccd6-47bd-9595-1749526661ff",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              },
              {
                "title": "And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
                "fullTitle": "Reassign the disable conference room When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
                "timedOut": false,
                "duration": 18,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPlantaBaja).forEach(y => value++);\n    expect(value).to.equal(0);\n    done();\n});",
                "err": {},
                "isRoot": false,
                "uuid": "3979c1b6-822a-494e-a327-d8876d1f3a15",
                "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 37,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\bdt\\ConferenceTest.js",
        "uuid": "4a0dba77-4a03-4b50-bb74-674f6f4156e2",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\bdt\\ConferenceTest.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Attendees",
        "suites": [],
        "tests": [
          {
            "title": "Get /services/{:serviceId}/attendees{?filter}/ returns 200",
            "fullTitle": "Smoke test for Attendees Get /services/{:serviceId}/attendees{?filter}/ returns 200",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "attendees.getAttendees(serviceId, filter, function (err,res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "f62b08f2-5154-48bc-9a9b-65c262849168",
            "parentUUID": "1ab3f3ed-9426-40ce-b596-7c2f5e07f7ab",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\AttendeesTest.js",
        "uuid": "1ab3f3ed-9426-40ce-b596-7c2f5e07f7ab",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\AttendeesTest.js",
        "passes": [
          {
            "title": "Get /services/{:serviceId}/attendees{?filter}/ returns 200",
            "fullTitle": "Smoke test for Attendees Get /services/{:serviceId}/attendees{?filter}/ returns 200",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "attendees.getAttendees(serviceId, filter, function (err,res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "f62b08f2-5154-48bc-9a9b-65c262849168",
            "parentUUID": "1ab3f3ed-9426-40ce-b596-7c2f5e07f7ab",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 23,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Locations",
        "suites": [],
        "tests": [
          {
            "title": "GET /locations",
            "fullTitle": "Smoke test for Locations GET /locations",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocation(function (err, res) {\n            expect(expectedStatus).to.equal(res.status);\n            done();\n        })",
            "err": {},
            "isRoot": false,
            "uuid": "984dff6c-3c52-4d82-b65c-1e93de6e1560",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Post /locations",
            "fullTitle": "Smoke test for Locations Post /locations",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"name\": \"B201\",\n    \"customName\": \"B201\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "44f99945-121a-40a8-b807-d531edde184f",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Get /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Get /locations/{:locationId }",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "69cfc5e8-d878-4dfc-9a42-6e8d0d46121d",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Put /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Put /locations/{:locationId }",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "ac74865a-a9a9-4495-b9b9-50d8bfa05e25",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Delete /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Delete /locations/{:locationId }",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9bed0c80-7714-4d50-9e7b-a21bbd8332be",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\LocationsTest.js",
        "uuid": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\LocationsTest.js",
        "passes": [
          {
            "title": "GET /locations",
            "fullTitle": "Smoke test for Locations GET /locations",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocation(function (err, res) {\n            expect(expectedStatus).to.equal(res.status);\n            done();\n        })",
            "err": {},
            "isRoot": false,
            "uuid": "984dff6c-3c52-4d82-b65c-1e93de6e1560",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Post /locations",
            "fullTitle": "Smoke test for Locations Post /locations",
            "timedOut": false,
            "duration": 37,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"name\": \"B201\",\n    \"customName\": \"B201\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
            "err": {},
            "isRoot": false,
            "uuid": "44f99945-121a-40a8-b807-d531edde184f",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Get /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Get /locations/{:locationId }",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "69cfc5e8-d878-4dfc-9a42-6e8d0d46121d",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Put /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Put /locations/{:locationId }",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "ac74865a-a9a9-4495-b9b9-50d8bfa05e25",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          },
          {
            "title": "Delete /locations/{:locationId }",
            "fullTitle": "Smoke test for Locations Delete /locations/{:locationId }",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9bed0c80-7714-4d50-9e7b-a21bbd8332be",
            "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 126,
        "rootEmpty": false
      },
      {
        "title": "Smoke Tests for Login",
        "suites": [],
        "tests": [
          {
            "title": "Post /login returns 200",
            "fullTitle": "Smoke Tests for Login Post /login returns 200",
            "timedOut": false,
            "duration": 33,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d980f5e5-0551-46f1-940d-54ebb0048bf6",
            "parentUUID": "c7ef4c47-8fde-4e24-947f-2c679996dae8",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\LoginTest.js",
        "uuid": "c7ef4c47-8fde-4e24-947f-2c679996dae8",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\LoginTest.js",
        "passes": [
          {
            "title": "Post /login returns 200",
            "fullTitle": "Smoke Tests for Login Post /login returns 200",
            "timedOut": false,
            "duration": 33,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d980f5e5-0551-46f1-940d-54ebb0048bf6",
            "parentUUID": "c7ef4c47-8fde-4e24-947f-2c679996dae8",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 33,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for meetings",
        "suites": [],
        "tests": [
          {
            "title": "- GET /rooms/{:roomId}/meetings",
            "fullTitle": "Smoke test for meetings - GET /rooms/{:roomId}/meetings",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "79534c7d-5f34-4603-95a3-dd49b6688537",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fed288e4-6637-4c66-9e36-f306b5045e1b",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meeting_status).to.equal(expectedStatus);\n done();",
            "err": {},
            "isRoot": false,
            "uuid": "d916a71e-f983-4ce4-8134-e1eb2180d1d1",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "198eec69-b2a4-4154-9454-0042797b805f",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 1687,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "0437eb00-9fc6-4d04-8f72-8588ab3e6d9d",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meetingDel_status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "e5de0e57-6ef2-47dc-8242-2f7c976032fa",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\MeetingsTest.js",
        "uuid": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\MeetingsTest.js",
        "passes": [
          {
            "title": "- GET /rooms/{:roomId}/meetings",
            "fullTitle": "Smoke test for meetings - GET /rooms/{:roomId}/meetings",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "79534c7d-5f34-4603-95a3-dd49b6688537",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "fed288e4-6637-4c66-9e36-f306b5045e1b",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meeting_status).to.equal(expectedStatus);\n done();",
            "err": {},
            "isRoot": false,
            "uuid": "d916a71e-f983-4ce4-8134-e1eb2180d1d1",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "198eec69-b2a4-4154-9454-0042797b805f",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
            "timedOut": false,
            "duration": 1687,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "0437eb00-9fc6-4d04-8f72-8588ab3e6d9d",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(meetingDel_status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "e5de0e57-6ef2-47dc-8242-2f7c976032fa",
            "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 1749,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Out-Of-Orders",
        "suites": [],
        "tests": [
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9cbcd3d7-9e22-438c-b9fc-e38a0d2f1494",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(outOfOrder_status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "b0da9616-1db4-4b26-86d3-637224158750",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c6982c1d-56ab-47f2-bbf6-d1be65720d9b",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f95d2f05-efd4-4bba-9ab8-f30a70cb582b",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c287b0b3-5fb4-4762-9475-c5a00a54adf4",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Get /out-of-orders",
            "fullTitle": "Smoke test for Out-Of-Orders Get /out-of-orders",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersWithOutService(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5af23c7e-e53a-4c48-aaef-02d71bb8652c",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\OutOfOrdersTest.js",
        "uuid": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\OutOfOrdersTest.js",
        "passes": [
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9cbcd3d7-9e22-438c-b9fc-e38a0d2f1494",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(outOfOrder_status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "b0da9616-1db4-4b26-86d3-637224158750",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 27,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c6982c1d-56ab-47f2-bbf6-d1be65720d9b",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f95d2f05-efd4-4bba-9ab8-f30a70cb582b",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c287b0b3-5fb4-4762-9475-c5a00a54adf4",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          },
          {
            "title": "Get /out-of-orders",
            "fullTitle": "Smoke test for Out-Of-Orders Get /out-of-orders",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "outOfOrders.getOutOfOrdersWithOutService(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "5af23c7e-e53a-4c48-aaef-02d71bb8652c",
            "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 6,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 113,
        "rootEmpty": false
      },
      {
        "title": "Smoke Tests for Resources",
        "suites": [],
        "tests": [
          {
            "title": "Get all resources /resources returns 200",
            "fullTitle": "Smoke Tests for Resources Get all resources /resources returns 200",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6b5d2577-3306-4dc4-8323-c2bd92f64464",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Post /resources returns 200",
            "fullTitle": "Smoke Tests for Resources Post /resources returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(resourceRes.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "45f4dc53-1af9-4769-80ef-30fbd4f7cf38",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Put /resources/{id} returns 200",
            "fullTitle": "Smoke Tests for Resources Put /resources/{id} returns 200",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var idResource = resourceRes.body._id;\nvar newBody = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'Now this a Flag'\n};\nresources.putResource(idResource, newBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f06582c6-56e8-4d19-8edc-fb8f05570feb",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Delete /resources/{id} resturn 200",
            "fullTitle": "Smoke Tests for Resources Delete /resources/{id} resturn 200",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var body = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'This is a flag'\n};\nresources.postResources(body, function (err, res) {\n    resources.deleteResource(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9ebc0050-9a33-4700-89a4-35d0eeb08822",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Get a resource /resources/{id} returns 200",
            "fullTitle": "Smoke Tests for Resources Get a resource /resources/{id} returns 200",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResource(resourceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "709edeb3-1865-46cc-acd0-d2bb01ca84e1",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\ResourcesTest.js",
        "uuid": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\ResourcesTest.js",
        "passes": [
          {
            "title": "Get all resources /resources returns 200",
            "fullTitle": "Smoke Tests for Resources Get all resources /resources returns 200",
            "timedOut": false,
            "duration": 36,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6b5d2577-3306-4dc4-8323-c2bd92f64464",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Post /resources returns 200",
            "fullTitle": "Smoke Tests for Resources Post /resources returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(resourceRes.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "45f4dc53-1af9-4769-80ef-30fbd4f7cf38",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Put /resources/{id} returns 200",
            "fullTitle": "Smoke Tests for Resources Put /resources/{id} returns 200",
            "timedOut": false,
            "duration": 38,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var idResource = resourceRes.body._id;\nvar newBody = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'Now this a Flag'\n};\nresources.putResource(idResource, newBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f06582c6-56e8-4d19-8edc-fb8f05570feb",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Delete /resources/{id} resturn 200",
            "fullTitle": "Smoke Tests for Resources Delete /resources/{id} resturn 200",
            "timedOut": false,
            "duration": 50,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var body = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'This is a flag'\n};\nresources.postResources(body, function (err, res) {\n    resources.deleteResource(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    });\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9ebc0050-9a33-4700-89a4-35d0eeb08822",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          },
          {
            "title": "Get a resource /resources/{id} returns 200",
            "fullTitle": "Smoke Tests for Resources Get a resource /resources/{id} returns 200",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.getResource(resourceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "709edeb3-1865-46cc-acd0-d2bb01ca84e1",
            "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 142,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for resources of rooms",
        "suites": [],
        "tests": [
          {
            "title": "GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 58,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "a05f54e3-760b-4e2f-a16f-cdd5066af4c3",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": 10}, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9e575534-e978-45f2-853d-2247edfb25d4",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.delResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "bcbabfda-75e5-40ac-8f44-bbcf38db03e5",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "GET /rooms/{:roomId}/resources",
            "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "room_resources.getResourcesByRoom(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "e72b997b-91e8-4f89-9c1e-b197685d6c27",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "POST /rooms/{:roomId}/resources/",
            "fullTitle": "Smoke test for resources of rooms POST /rooms/{:roomId}/resources/",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "891c1a4e-bc8e-46fa-ae32-bf6c8b4eb0b6",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\RoomResourcesTest.js",
        "uuid": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\RoomResourcesTest.js",
        "passes": [
          {
            "title": "GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 58,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "a05f54e3-760b-4e2f-a16f-cdd5066af4c3",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms PUT /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 55,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": 10}, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "9e575534-e978-45f2-853d-2247edfb25d4",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
            "fullTitle": "Smoke test for resources of rooms DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
            "timedOut": false,
            "duration": 52,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.delResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
            "err": {},
            "isRoot": false,
            "uuid": "bcbabfda-75e5-40ac-8f44-bbcf38db03e5",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "GET /rooms/{:roomId}/resources",
            "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "room_resources.getResourcesByRoom(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "e72b997b-91e8-4f89-9c1e-b197685d6c27",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          },
          {
            "title": "POST /rooms/{:roomId}/resources/",
            "fullTitle": "Smoke test for resources of rooms POST /rooms/{:roomId}/resources/",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "891c1a4e-bc8e-46fa-ae32-bf6c8b4eb0b6",
            "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 217,
        "rootEmpty": false
      },
      {
        "title": "Smoke Tests for Rooms",
        "suites": [],
        "tests": [
          {
            "title": "Get all rooms /rooms returns 200",
            "fullTitle": "Smoke Tests for Rooms Get all rooms /rooms returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "e11d31d7-4100-4b17-97c6-158f733a858c",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          },
          {
            "title": "Put /rooms/{id} returns 200",
            "fullTitle": "Smoke Tests for Rooms Put /rooms/{id} returns 200",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var modifiedRoom = {\n    displayName: 'displayNameModified',\n    customDisplayName: 'customDisplayNameModified'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4138848a-2e4c-4ca6-a080-ff171eb7e993",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          },
          {
            "title": "Get a Room by Id /rooms/{id} returns 200",
            "fullTitle": "Smoke Tests for Rooms Get a Room by Id /rooms/{id} returns 200",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRoomsById(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ad2cd194-20ff-450c-8a0a-cadb7e6d2088",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\RoomsTest.js",
        "uuid": "834be87e-0939-44df-8915-d783d0073db2",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\RoomsTest.js",
        "passes": [
          {
            "title": "Get all rooms /rooms returns 200",
            "fullTitle": "Smoke Tests for Rooms Get all rooms /rooms returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "e11d31d7-4100-4b17-97c6-158f733a858c",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          },
          {
            "title": "Put /rooms/{id} returns 200",
            "fullTitle": "Smoke Tests for Rooms Put /rooms/{id} returns 200",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var modifiedRoom = {\n    displayName: 'displayNameModified',\n    customDisplayName: 'customDisplayNameModified'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4138848a-2e4c-4ca6-a080-ff171eb7e993",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          },
          {
            "title": "Get a Room by Id /rooms/{id} returns 200",
            "fullTitle": "Smoke Tests for Rooms Get a Room by Id /rooms/{id} returns 200",
            "timedOut": false,
            "duration": 22,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "rooms.getRoomsById(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ad2cd194-20ff-450c-8a0a-cadb7e6d2088",
            "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 3,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 78,
        "rootEmpty": false
      },
      {
        "title": "Smoke tests for Services/Room/Resources endpoint",
        "suites": [],
        "tests": [
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0]._id;\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "32678ab7-fab9-437f-bfbf-bf821294cc3b",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "3a4809fe-427b-40a3-8188-fb846305e279",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "7d0a6184-5f18-45fc-984d-57f48eb30d84",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var putResourceById =\n    {\n        \"quantity\": 5\n    };\nservices.putResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, putResourceById, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "bd59238f-4c25-4fa6-a322-19f3ec3f01ce",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.deleteResource(idResource, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "32f1ccee-7fa8-4eeb-b56e-41f50cf0b576",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\ServicesRoomResourcesTest.js",
        "uuid": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\ServicesRoomResourcesTest.js",
        "passes": [
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0]._id;\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "32678ab7-fab9-437f-bfbf-bf821294cc3b",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "3a4809fe-427b-40a3-8188-fb846305e279",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "7d0a6184-5f18-45fc-984d-57f48eb30d84",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var putResourceById =\n    {\n        \"quantity\": 5\n    };\nservices.putResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, putResourceById, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "bd59238f-4c25-4fa6-a322-19f3ec3f01ce",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "fullTitle": "Smoke tests for Services/Room/Resources endpoint Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
            "timedOut": false,
            "duration": 26,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "resources.deleteResource(idResource, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "32f1ccee-7fa8-4eeb-b56e-41f50cf0b576",
            "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 5,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 96,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Services",
        "suites": [],
        "tests": [
          {
            "title": "Get /services returns 200",
            "fullTitle": "Smoke test for Services Get /services returns 200",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3ffb420f-ea64-4ed2-be5b-d6525c92700e",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Post /services returns 200",
            "fullTitle": "Smoke test for Services Post /services returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(serviceRes.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "fd89773a-6b73-4793-aca2-d2f8d3dfb674",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId} returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getService(serviceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7fdc2d42-d381-44d3-a036-7d9d40dd0513",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}/rooms returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms returns 200",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "1336564e-68a9-44bd-8c00-eea3e378ad9e",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}/rooms/{roomId} returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms/{roomId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getARoomOfAService(serviceRes.body._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "b9a169d9-d73b-4ead-8f06-035c2dfcaff7",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "PUT /services/{serviceId}/rooms/{roomId} returns 200",
            "fullTitle": "Smoke test for Services PUT /services/{serviceId}/rooms/{roomId} returns 200",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonUpdatedRoom = {\n    quantity: 11,\n};\nservices.putARoomOfAService(serviceRes.body._id, room._id, jsonUpdatedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "ee9b7c8a-891c-4a12-a256-1ba056d5c7e1",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId} returns 200",
            "fullTitle": "Smoke test for Services Delete /services/{serviceId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var idService = serviceRes.body._id;\nservices.deleteService(idService, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f7263521-55e2-4e6c-8b3f-9c58844c0787",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "Get /services/{serviceId}/rooms returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms returns 200",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "err": {},
            "isRoot": false,
            "uuid": "1336564e-68a9-44bd-8c00-eea3e378ad9e",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\ServicesTest.js",
        "uuid": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\ServicesTest.js",
        "passes": [
          {
            "title": "Get /services returns 200",
            "fullTitle": "Smoke test for Services Get /services returns 200",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3ffb420f-ea64-4ed2-be5b-d6525c92700e",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Post /services returns 200",
            "fullTitle": "Smoke test for Services Post /services returns 200",
            "timedOut": false,
            "duration": 0,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "expect(serviceRes.status).to.equal(expectedStatus);\ndone();",
            "err": {},
            "isRoot": false,
            "uuid": "fd89773a-6b73-4793-aca2-d2f8d3dfb674",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId} returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId} returns 200",
            "timedOut": false,
            "duration": 24,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getService(serviceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7fdc2d42-d381-44d3-a036-7d9d40dd0513",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Get /services/{serviceId}/rooms/{roomId} returns 200",
            "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms/{roomId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "services.getARoomOfAService(serviceRes.body._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "b9a169d9-d73b-4ead-8f06-035c2dfcaff7",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "PUT /services/{serviceId}/rooms/{roomId} returns 200",
            "fullTitle": "Smoke test for Services PUT /services/{serviceId}/rooms/{roomId} returns 200",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var jsonUpdatedRoom = {\n    quantity: 11,\n};\nservices.putARoomOfAService(serviceRes.body._id, room._id, jsonUpdatedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
            "err": {},
            "isRoot": false,
            "uuid": "ee9b7c8a-891c-4a12-a256-1ba056d5c7e1",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          },
          {
            "title": "Delete /services/{serviceId} returns 200",
            "fullTitle": "Smoke test for Services Delete /services/{serviceId} returns 200",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "var idService = serviceRes.body._id;\nservices.deleteService(idService, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f7263521-55e2-4e6c-8b3f-9c58844c0787",
            "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 7,
        "totalPasses": 6,
        "totalFailures": 0,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 109,
        "rootEmpty": false
      },
      {
        "title": "Smoke test for Service-Types",
        "suites": [],
        "tests": [
          {
            "title": "Get /service-types returns 200",
            "fullTitle": "Smoke test for Service-Types Get /service-types returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7ba3755e-00aa-4f1b-9bc3-75faf8026acd",
            "parentUUID": "7533bd07-b375-4368-b06c-803cb9b673c5",
            "skipped": false
          }
        ],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\smoke\\ServiceTypesTest.js",
        "uuid": "7533bd07-b375-4368-b06c-803cb9b673c5",
        "fullFile": "C:\\Users\\Administrator\\Documents\\API102\\Repository\\AT02-GROUP01\\test\\smoke\\ServiceTypesTest.js",
        "passes": [
          {
            "title": "Get /service-types returns 200",
            "fullTitle": "Smoke test for Service-Types Get /service-types returns 200",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7ba3755e-00aa-4f1b-9bc3-75faf8026acd",
            "parentUUID": "7533bd07-b375-4368-b06c-803cb9b673c5",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 1,
        "totalPasses": 1,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 17,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d55c103e-3d1d-46c4-a321-894f8675d316",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "obtain the location generate GET /locations",
      "fullTitle": "Acceptance test for Locations obtain the location generate GET /locations",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocation(function (err, res) {\n    expect(res.body[0].name).to.equal(body.name);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "74bab9f1-9c64-47ab-8f4f-645bf51f28de",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "have the same name with it create Post /locations",
      "fullTitle": "Acceptance test for Locations have the same name with it create Post /locations",
      "timedOut": false,
      "duration": 41,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"name\": \"B204\",\n    \"customName\": \"B204\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.body.name).to.equal(bodyJson.name);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2410fd3d-cd69-4763-acd6-19959ee3ffe7",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "obtain the location generate Get /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations obtain the location generate Get /locations/{:locationId }",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.body._id).to.equal(locationRes._id);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fece2b97-7421-4fb8-9d12-7ed14c732c18",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "have the custom name modify Put /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations have the custom name modify Put /locations/{:locationId }",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.body.customName).to.equal(bodyJson.customName);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fd21f669-c3d0-443b-b347-537d1e052402",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "the locations is deleted Delete /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations the locations is deleted Delete /locations/{:locationId }",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        locations.getLocationById(res.body._id,function (err, res) {\n            expect(res.status).to.equal(404);\n            done();\n        })\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5ec3446c-dd62-4188-ad6b-75ab83696b68",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
      "fullTitle": "Acceptance Tests for Login Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.username).to.equal(credentials.username);\n    expect(moment(res.body.createdAt).date()).to.equal(moment().date());\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5e887ebd-c434-4c8c-9fa8-6a979ab4d0d1",
      "parentUUID": "01e53094-3786-4a82-a35a-434970343d4c",
      "skipped": false
    },
    {
      "title": "Get /rooms/{:roomId}/meetings",
      "fullTitle": "Smoke test for meetings Get /rooms/{:roomId}/meetings",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].roomId).to.equal(room._id);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9f505ffc-aad3-4cc1-8c1e-52bc2df4e774",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    expect(res.body[0].customName).to.equal(body.customName);\n    expect(res.body[0].title).to.equal(body.title);\n    expect(res.body[0].roomEmail).to.equal(body.roomEmail);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "cc3fd593-e1c9-4760-9919-010432497627",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meeting_status).to.equal(expectedStatus);\nexpect(meetingRes.organizer).to.equal(body.organizer);\nexpect(meetingRes.serviceId).to.equal(service._id);\nexpect(meetingRes.roomId).to.equal(room._id);\nexpect(meetingRes.roomEmail).to.equal(body.roomEmail);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "82da2f4c-b233-4c77-bf9d-5c2ce094957c",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(meetingRes.organizer).to.equal(body.organizer);\n    expect(meetingRes.serviceId).to.equal(service._id);\n    expect(meetingRes.roomId).to.equal(room._id);\n    expect(meetingRes._id).to.equal(meeting_id);\n    expect(meetingRes.roomEmail).to.equal(body.roomEmail);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1935eabc-3e54-4e4a-810a-70352f38c10a",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 875,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.organizer).to.equal(body.organizer);\n    expect(res.body.serviceId).to.equal(service._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body._id).to.equal(meeting_id);\n    expect(res.body.roomEmail).to.equal(body.roomEmail);\n    expect(res.body.title).to.equal(meetingChanged.title);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "3eafa1d4-d3dc-49b6-af0a-f09fe2da1e0f",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meetingDel_status).to.equal(expectedStatus);\nexpect(meetingDel.organizer).to.equal(body.organizer);\nexpect(meetingDel.serviceId).to.equal(service._id);\nexpect(meetingDel.roomId).to.equal(room._id);\nexpect(meetingDel.kind).to.equal('meeting');\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "7560d067-272f-4377-a5b7-521145c47c50",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0]._id).to.equal(outOfOrder_body._id);\n    expect(res.body[0].roomId).to.equal(room_body[0]._id);\n    expect(res.body[0].title).to.equal(orderJson.title);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "7017c57e-062e-4f75-97f6-c3124f0f3d55",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(outOfOrder_status).to.equal(expectedStatus);\nexpect(outOfOrder_body.roomId).to.equal(room._id);\nexpect(outOfOrder_body.title).to.equal(orderJson.title);\nexpect(orderJson.sendEmail).to.be.false;\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "1ce292ee-46b0-401f-8549-13bc402244f3",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(orderJson.title);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "71c9c455-014e-47ac-8645-047ee3803523",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(bodyChanged.title);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "73697a06-f025-4e20-9b33-6b19df830366",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "87cbc13f-1d4c-4c88-b20d-da401f419451",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Get /resources",
      "fullTitle": "Acceptance Tests for Resources Get /resources",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumResources);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a3cb8916-d56f-4fce-80b7-76404705a36f",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Post /resources",
      "fullTitle": "Acceptance Tests for Resources Post /resources",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePostResourceStatus).to.equal(expectedStatus);\nexpect(responsePostResourceBody.name).to.equal(resourcesConfig.postBody.name);\nexpect(responsePostResourceBody.customName).to.equal(resourcesConfig.postBody.customName);\nexpect(responsePostResourceBody.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\nexpect(responsePostResourceBody.from).to.equal(resourcesConfig.postBody.from);\nexpect(responsePostResourceBody.description).to.equal(resourcesConfig.postBody.description);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "4fd028a0-6f83-4162-a60a-7b9657dbb149",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Get /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Get /resources/{resourceId}",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4459d488-0153-4c69-9161-87542900ad1f",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Put /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Put /resources/{resourceId}",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.putResource(responsePostResourceBody._id, resourcesConfig.putBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.putBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.putBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.putBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.putBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.putBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2397f12-80d3-4510-afdc-1abd986803b6",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Delete /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Delete /resources/{resourceId}",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.deleteResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a2ff0991-83f6-414c-97d3-d9fb568f9ed5",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 47,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(resourceRes._id).to.equal(res.body.resourceId);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "0ceee338-ccd2-4eab-bef5-8c9023c1bb1e",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var quantityModify = 10;\nvar jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": quantityModify}, function (err, res) {\n        expect(res.body.resources[0].quantity).to.equal(quantityModify);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5e83f86e-0cd3-431d-9bba-d8c74245322f",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "return the resources GET /rooms/{:roomId}/resources",
      "fullTitle": "Smoke test for resources of rooms return the resources GET /rooms/{:roomId}/resources",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n            resourceId: resourceRes._id,\n            quantity: 5\n        };\n        var joinResource;\n        room_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n            joinResource = res.body;\n            room_resources.getResourcesByRoom(room._id, function (err, res) {\n                expect(res.body[0]._id).to.equal(joinResource.resources[0]._id);\n                done();\n            })\n        })",
      "err": {},
      "isRoot": false,
      "uuid": "36f1dab7-0970-400c-8614-08a3952f18e0",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "the resource is created POST /rooms/{:roomId}/resources/",
      "fullTitle": "Smoke test for resources of rooms the resource is created POST /rooms/{:roomId}/resources/",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n    expect(resourceRes._id).to.equal(res.body.resources[0].resourceId);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "18f30844-2d35-4835-998e-596f3044326d",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "Get /Rooms returns all rooms",
      "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms returns all rooms",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumRoomsExpected);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a545ff4-a365-4d80-b3f9-64a599fdfece",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Put /Rooms/{roomId} returns the first room modified",
      "fullTitle": "Acceptance tests for Rooms endpoint Put /Rooms/{roomId} returns the first room modified",
      "timedOut": false,
      "duration": 65,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var modifiedRoom = {\n    displayName: 'GualyVc',\n    customDisplayName: 'GualyVc'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    var putRoomBody = res.body;\n    expect(putRoomBody.displayName).to.equal(modifiedRoom.displayName)\n    expect(putRoomBody.customDisplayName).to.equal(modifiedRoom.customDisplayName)\n    expect(putRoomBody._id).to.be.equal(room._id)\n    expect(putRoomBody.serviceId).to.be.equal(room.serviceId)\n    expect(putRoomBody.enable).to.be.equal(room.enable)\n    expect(res.status).to.equal(expectedStatus);\n    var recoverRoom = {\n        displayName: room.displayName,\n        customDisplayName: room.customDisplayName\n    };\n    rooms.putRoomsById(room._id, recoverRoom, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "da482acf-cca0-47b3-bd6b-e95912e846ec",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Get /Rooms/{roomId} - returns an specific Room by its Id",
      "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms/{roomId} - returns an specific Room by its Id",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRoomsById(room._id, function (err, res) {\n    var getRoomByIdBody = res.body;\n    expect(getRoomByIdBody._id).to.equal(room._id)\n    expect(getRoomByIdBody.displayName).to.equal(room.displayName)\n    expect(getRoomByIdBody.customDisplayName).to.equal(room.customDisplayName)\n    expect(getRoomByIdBody.serviceId).to.equal(room.serviceId)\n    expect(getRoomByIdBody.enable).to.equal(room.enable)\n    expect(getRoomByIdBody.Url).to.equal(room.Url)\n    expect(getRoomByIdBody.__v).to.equal(room.__v)\n    expect(getRoomByIdBody.locationId).to.equal(room.locationId)\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3e52cdd4-2f76-4013-8852-3f901718689b",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
      "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0];\n    expect(res.status).to.equal(expectedStatus);\n    expect(resourceIdInARoom._id).to.equal(responsePost.body.resources[0]._id);\n    expect(resourceIdInARoom.quantity).to.equal(responsePost.body.resources[0].quantity)\n    expect(resourceIdInARoom.resourceId).to.equal(responsePost.body.resources[0].resourceId)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "23bbc198-89ee-402c-aa38-b1f36be5e0bf",
      "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
      "skipped": false
    },
    {
      "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
      "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "ace166a4-331a-4df2-9309-56f64996b50e",
      "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
      "skipped": false
    },
    {
      "title": "Get /services",
      "fullTitle": "Acceptance test for Services Get /services",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumServices);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "6262a771-16af-41d3-8f01-162f7a61b929",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Post /services",
      "fullTitle": "Acceptance test for Services Post /services",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(postResponseStatus).to.equal(expectedStatus);\nexpect(postResponseBody.credential.username).to.equal(postBody.username);\nexpect(postResponseBody.serviceUrl.includes(postBody.hostname)).to.be.true;\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "4dd98505-cc1a-46a4-ad41-600a4ad03525",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}",
      "fullTitle": "Acceptance test for Services Get /services/{serviceId}",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.credential.username).to.equal(postBody.username);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2812d46-5c6b-4d27-bfca-368a7a127b48",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId}",
      "fullTitle": "Acceptance test for Services Delete /services/{serviceId}",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.deleteService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    expect(res.body.type).to.equal(credentials.serviceType);\n    expect(res.body.name).to.equal(credentials.serviceName);\n    expect(res.body.version).to.equal(credentials.serviceVersion);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "93180082-4c26-43d8-acd0-fe125547ef4e",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}",
      "fullTitle": "Acceptance test for Services Get /services/{:serviceId}/rooms/{:roomId}",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getARoomOfAService(postResponseBody._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(room._id);\n    expect(res.body.serviceId).to.equal(postResponseBody._id);\n    expect(res.body.emailAddress).to.equal(room.emailAddress);\n    expect(res.body.displayName).to.equal(room.displayName);\n    expect(res.body.enabled).to.equal(room.enabled);\n    expect(res.body.locationId).to.equal(room.locationId);\n    expect(res.body.customDisplayName).to.equal(room.customDisplayName);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "223060df-ca9b-469c-955c-02e4453e8b99",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /service-types returns 200",
      "fullTitle": "Acceptance test for Service-Types Get /service-types returns 200",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].name).to.equal(serviceTypesJson.serviceName);\n    expect(res.body[0].version).to.equal(serviceTypesJson.serviceVersion);\n    expect(res.body[0].support[0]).to.equal(serviceTypesJson.support);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "acf2f721-4168-4ebf-8885-a6ec0776d456",
      "parentUUID": "501d7c3a-0539-452c-80ed-fa54e74f8fa1",
      "skipped": false
    },
    {
      "title": "And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
      "timedOut": false,
      "duration": 114,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var locationJson = {\n                name: \"Jalasoft\",\n                customName: \"Jalasoft\",\n                description: \"bla bla\"\n            };\n            locations.postLocation(locationJson, function (err1, res1) {\n                idJala = res1.body._id;\n                var locationsTwo = {\n                    name: \"PlantaBaja\",\n                    customName: \"PlantaBaja\",\n                    parentId: res1.body._id\n                };\n                locations.postLocation(locationsTwo, function (err2, res2) {\n                    idPlantaBaja = res2.body._id;\n                    var jsonLocation = {\n                        locationId: res2.body._id\n                    };\n                    rooms.putRoomsById(idRoomTarata, jsonLocation, function (err, res) {\n                        done();\n                    });\n                });\n            });",
      "err": {},
      "isRoot": false,
      "uuid": "328ba63a-6a4d-49f7-b01c-291325132e15",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "And I have the location (JalasoftPlanta BajaPueblito)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have the location (JalasoftPlanta BajaPueblito)",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var locationsThree = {\n    name: \"Pueblito\",\n    customName: \"Pueblito\",\n    parentId: idPlantaBaja\n};\nlocations.postLocation(locationsThree, function (err, res) {\n    idPueblito = res.body._id;\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "111fb308-6541-4ff9-b54a-224e3b8daa14",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.putRoomsById(roomsRes[2]._id, {locationId: idPueblito}, function (err, res) {\n                done();\n            })",
      "err": {},
      "isRoot": false,
      "uuid": "1f0093fb-0118-4f9c-9f0a-4beee3c1d13e",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "Then  Tarata is correctly assigned to the new location",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) Then  Tarata is correctly assigned to the new location",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resTarataPueblito.status).to.equal(expectedStatus);\nexpect(resTarataPueblito.body.locationId).to.equal(idPueblito);",
      "err": {},
      "isRoot": false,
      "uuid": "f94c2b36-520f-46b6-93ee-52a07e484d37",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And Tarata status is still disabled",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And Tarata status is still disabled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resTarataPueblito.body.enabled).to.be.false;",
      "err": {},
      "isRoot": false,
      "uuid": "2ba1c36b-0e74-42a1-bc3d-a77e8a1954e4",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPueblito).forEach(y => value++);\n    expect(value).to.equal(2);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7ae5a4ff-ccd6-47bd-9595-1749526661ff",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPlantaBaja).forEach(y => value++);\n    expect(value).to.equal(0);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3979c1b6-822a-494e-a327-d8876d1f3a15",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/attendees{?filter}/ returns 200",
      "fullTitle": "Smoke test for Attendees Get /services/{:serviceId}/attendees{?filter}/ returns 200",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "attendees.getAttendees(serviceId, filter, function (err,res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "f62b08f2-5154-48bc-9a9b-65c262849168",
      "parentUUID": "1ab3f3ed-9426-40ce-b596-7c2f5e07f7ab",
      "skipped": false
    },
    {
      "title": "GET /locations",
      "fullTitle": "Smoke test for Locations GET /locations",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocation(function (err, res) {\n            expect(expectedStatus).to.equal(res.status);\n            done();\n        })",
      "err": {},
      "isRoot": false,
      "uuid": "984dff6c-3c52-4d82-b65c-1e93de6e1560",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Post /locations",
      "fullTitle": "Smoke test for Locations Post /locations",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"name\": \"B201\",\n    \"customName\": \"B201\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "44f99945-121a-40a8-b807-d531edde184f",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Get /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Get /locations/{:locationId }",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "69cfc5e8-d878-4dfc-9a42-6e8d0d46121d",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Put /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Put /locations/{:locationId }",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "ac74865a-a9a9-4495-b9b9-50d8bfa05e25",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Delete /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Delete /locations/{:locationId }",
      "timedOut": false,
      "duration": 39,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9bed0c80-7714-4d50-9e7b-a21bbd8332be",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Post /login returns 200",
      "fullTitle": "Smoke Tests for Login Post /login returns 200",
      "timedOut": false,
      "duration": 33,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d980f5e5-0551-46f1-940d-54ebb0048bf6",
      "parentUUID": "c7ef4c47-8fde-4e24-947f-2c679996dae8",
      "skipped": false
    },
    {
      "title": "- GET /rooms/{:roomId}/meetings",
      "fullTitle": "Smoke test for meetings - GET /rooms/{:roomId}/meetings",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "79534c7d-5f34-4603-95a3-dd49b6688537",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fed288e4-6637-4c66-9e36-f306b5045e1b",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meeting_status).to.equal(expectedStatus);\n done();",
      "err": {},
      "isRoot": false,
      "uuid": "d916a71e-f983-4ce4-8134-e1eb2180d1d1",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "198eec69-b2a4-4154-9454-0042797b805f",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 1687,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "0437eb00-9fc6-4d04-8f72-8588ab3e6d9d",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meetingDel_status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "e5de0e57-6ef2-47dc-8242-2f7c976032fa",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9cbcd3d7-9e22-438c-b9fc-e38a0d2f1494",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(outOfOrder_status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "b0da9616-1db4-4b26-86d3-637224158750",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c6982c1d-56ab-47f2-bbf6-d1be65720d9b",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f95d2f05-efd4-4bba-9ab8-f30a70cb582b",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c287b0b3-5fb4-4762-9475-c5a00a54adf4",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get /out-of-orders",
      "fullTitle": "Smoke test for Out-Of-Orders Get /out-of-orders",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersWithOutService(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5af23c7e-e53a-4c48-aaef-02d71bb8652c",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get all resources /resources returns 200",
      "fullTitle": "Smoke Tests for Resources Get all resources /resources returns 200",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6b5d2577-3306-4dc4-8323-c2bd92f64464",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Post /resources returns 200",
      "fullTitle": "Smoke Tests for Resources Post /resources returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resourceRes.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "45f4dc53-1af9-4769-80ef-30fbd4f7cf38",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Put /resources/{id} returns 200",
      "fullTitle": "Smoke Tests for Resources Put /resources/{id} returns 200",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var idResource = resourceRes.body._id;\nvar newBody = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'Now this a Flag'\n};\nresources.putResource(idResource, newBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f06582c6-56e8-4d19-8edc-fb8f05570feb",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Delete /resources/{id} resturn 200",
      "fullTitle": "Smoke Tests for Resources Delete /resources/{id} resturn 200",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var body = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'This is a flag'\n};\nresources.postResources(body, function (err, res) {\n    resources.deleteResource(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9ebc0050-9a33-4700-89a4-35d0eeb08822",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Get a resource /resources/{id} returns 200",
      "fullTitle": "Smoke Tests for Resources Get a resource /resources/{id} returns 200",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResource(resourceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "709edeb3-1865-46cc-acd0-d2bb01ca84e1",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 58,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "a05f54e3-760b-4e2f-a16f-cdd5066af4c3",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 55,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": 10}, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9e575534-e978-45f2-853d-2247edfb25d4",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 52,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.delResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "bcbabfda-75e5-40ac-8f44-bbcf38db03e5",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "GET /rooms/{:roomId}/resources",
      "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "room_resources.getResourcesByRoom(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "e72b997b-91e8-4f89-9c1e-b197685d6c27",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "POST /rooms/{:roomId}/resources/",
      "fullTitle": "Smoke test for resources of rooms POST /rooms/{:roomId}/resources/",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "891c1a4e-bc8e-46fa-ae32-bf6c8b4eb0b6",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "Get all rooms /rooms returns 200",
      "fullTitle": "Smoke Tests for Rooms Get all rooms /rooms returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e11d31d7-4100-4b17-97c6-158f733a858c",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Put /rooms/{id} returns 200",
      "fullTitle": "Smoke Tests for Rooms Put /rooms/{id} returns 200",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var modifiedRoom = {\n    displayName: 'displayNameModified',\n    customDisplayName: 'customDisplayNameModified'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4138848a-2e4c-4ca6-a080-ff171eb7e993",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Get a Room by Id /rooms/{id} returns 200",
      "fullTitle": "Smoke Tests for Rooms Get a Room by Id /rooms/{id} returns 200",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRoomsById(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ad2cd194-20ff-450c-8a0a-cadb7e6d2088",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0]._id;\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "32678ab7-fab9-437f-bfbf-bf821294cc3b",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "3a4809fe-427b-40a3-8188-fb846305e279",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "7d0a6184-5f18-45fc-984d-57f48eb30d84",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var putResourceById =\n    {\n        \"quantity\": 5\n    };\nservices.putResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, putResourceById, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "bd59238f-4c25-4fa6-a322-19f3ec3f01ce",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.deleteResource(idResource, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "32f1ccee-7fa8-4eeb-b56e-41f50cf0b576",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Get /services returns 200",
      "fullTitle": "Smoke test for Services Get /services returns 200",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3ffb420f-ea64-4ed2-be5b-d6525c92700e",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Post /services returns 200",
      "fullTitle": "Smoke test for Services Post /services returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(serviceRes.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "fd89773a-6b73-4793-aca2-d2f8d3dfb674",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId} returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getService(serviceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7fdc2d42-d381-44d3-a036-7d9d40dd0513",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms returns 200",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "1336564e-68a9-44bd-8c00-eea3e378ad9e",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId} returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms/{roomId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getARoomOfAService(serviceRes.body._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "b9a169d9-d73b-4ead-8f06-035c2dfcaff7",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "PUT /services/{serviceId}/rooms/{roomId} returns 200",
      "fullTitle": "Smoke test for Services PUT /services/{serviceId}/rooms/{roomId} returns 200",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonUpdatedRoom = {\n    quantity: 11,\n};\nservices.putARoomOfAService(serviceRes.body._id, room._id, jsonUpdatedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "ee9b7c8a-891c-4a12-a256-1ba056d5c7e1",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId} returns 200",
      "fullTitle": "Smoke test for Services Delete /services/{serviceId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var idService = serviceRes.body._id;\nservices.deleteService(idService, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f7263521-55e2-4e6c-8b3f-9c58844c0787",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /service-types returns 200",
      "fullTitle": "Smoke test for Service-Types Get /service-types returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7ba3755e-00aa-4f1b-9bc3-75faf8026acd",
      "parentUUID": "7533bd07-b375-4368-b06c-803cb9b673c5",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "Get /services/{serviceId}/rooms returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms returns 200",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "err": {},
      "isRoot": false,
      "uuid": "1336564e-68a9-44bd-8c00-eea3e378ad9e",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    }
  ],
  "allPasses": [
    {
      "title": "obtain the location generate GET /locations",
      "fullTitle": "Acceptance test for Locations obtain the location generate GET /locations",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocation(function (err, res) {\n    expect(res.body[0].name).to.equal(body.name);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "74bab9f1-9c64-47ab-8f4f-645bf51f28de",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "have the same name with it create Post /locations",
      "fullTitle": "Acceptance test for Locations have the same name with it create Post /locations",
      "timedOut": false,
      "duration": 41,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"name\": \"B204\",\n    \"customName\": \"B204\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.body.name).to.equal(bodyJson.name);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "2410fd3d-cd69-4763-acd6-19959ee3ffe7",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "obtain the location generate Get /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations obtain the location generate Get /locations/{:locationId }",
      "timedOut": false,
      "duration": 34,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.body._id).to.equal(locationRes._id);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fece2b97-7421-4fb8-9d12-7ed14c732c18",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "have the custom name modify Put /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations have the custom name modify Put /locations/{:locationId }",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.body.customName).to.equal(bodyJson.customName);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fd21f669-c3d0-443b-b347-537d1e052402",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "the locations is deleted Delete /locations/{:locationId }",
      "fullTitle": "Acceptance test for Locations the locations is deleted Delete /locations/{:locationId }",
      "timedOut": false,
      "duration": 63,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        locations.getLocationById(res.body._id,function (err, res) {\n            expect(res.status).to.equal(404);\n            done();\n        })\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5ec3446c-dd62-4188-ad6b-75ab83696b68",
      "parentUUID": "1b583d8e-f172-432c-b8a6-faa8cfbd543d",
      "skipped": false
    },
    {
      "title": "Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
      "fullTitle": "Acceptance Tests for Login Post /login request returns 200, it has the same username than username on credentials and, the day of creation is today.",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.username).to.equal(credentials.username);\n    expect(moment(res.body.createdAt).date()).to.equal(moment().date());\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "5e887ebd-c434-4c8c-9fa8-6a979ab4d0d1",
      "parentUUID": "01e53094-3786-4a82-a35a-434970343d4c",
      "skipped": false
    },
    {
      "title": "Get /rooms/{:roomId}/meetings",
      "fullTitle": "Smoke test for meetings Get /rooms/{:roomId}/meetings",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].roomId).to.equal(room._id);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9f505ffc-aad3-4cc1-8c1e-52bc2df4e774",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].organizer).to.equal(body.organizer);\n    expect(res.body[0].customName).to.equal(body.customName);\n    expect(res.body[0].title).to.equal(body.title);\n    expect(res.body[0].roomEmail).to.equal(body.roomEmail);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "cc3fd593-e1c9-4760-9919-010432497627",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meeting_status).to.equal(expectedStatus);\nexpect(meetingRes.organizer).to.equal(body.organizer);\nexpect(meetingRes.serviceId).to.equal(service._id);\nexpect(meetingRes.roomId).to.equal(room._id);\nexpect(meetingRes.roomEmail).to.equal(body.roomEmail);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "82da2f4c-b233-4c77-bf9d-5c2ce094957c",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 25,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(meetingRes.organizer).to.equal(body.organizer);\n    expect(meetingRes.serviceId).to.equal(service._id);\n    expect(meetingRes.roomId).to.equal(room._id);\n    expect(meetingRes._id).to.equal(meeting_id);\n    expect(meetingRes.roomEmail).to.equal(body.roomEmail);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "1935eabc-3e54-4e4a-810a-70352f38c10a",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 875,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.organizer).to.equal(body.organizer);\n    expect(res.body.serviceId).to.equal(service._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body._id).to.equal(meeting_id);\n    expect(res.body.roomEmail).to.equal(body.roomEmail);\n    expect(res.body.title).to.equal(meetingChanged.title);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "3eafa1d4-d3dc-49b6-af0a-f09fe2da1e0f",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meetingDel_status).to.equal(expectedStatus);\nexpect(meetingDel.organizer).to.equal(body.organizer);\nexpect(meetingDel.serviceId).to.equal(service._id);\nexpect(meetingDel.roomId).to.equal(room._id);\nexpect(meetingDel.kind).to.equal('meeting');\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "7560d067-272f-4377-a5b7-521145c47c50",
      "parentUUID": "62d80163-4ad4-4a70-9f02-fc7890f57fb8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0]._id).to.equal(outOfOrder_body._id);\n    expect(res.body[0].roomId).to.equal(room_body[0]._id);\n    expect(res.body[0].title).to.equal(orderJson.title);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "7017c57e-062e-4f75-97f6-c3124f0f3d55",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(outOfOrder_status).to.equal(expectedStatus);\nexpect(outOfOrder_body.roomId).to.equal(room._id);\nexpect(outOfOrder_body.title).to.equal(orderJson.title);\nexpect(orderJson.sendEmail).to.be.false;\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "1ce292ee-46b0-401f-8549-13bc402244f3",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(orderJson.title);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "71c9c455-014e-47ac-8645-047ee3803523",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.title).to.equal(bodyChanged.title);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "73697a06-f025-4e20-9b33-6b19df830366",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(outOfOrder_body._id);\n    expect(res.body.roomId).to.equal(room._id);\n    expect(res.body.sendEmail).to.be.false;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "87cbc13f-1d4c-4c88-b20d-da401f419451",
      "parentUUID": "6197392d-8aed-4722-a662-fb4af719faf8",
      "skipped": false
    },
    {
      "title": "Get /resources",
      "fullTitle": "Acceptance Tests for Resources Get /resources",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumResources);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a3cb8916-d56f-4fce-80b7-76404705a36f",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Post /resources",
      "fullTitle": "Acceptance Tests for Resources Post /resources",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePostResourceStatus).to.equal(expectedStatus);\nexpect(responsePostResourceBody.name).to.equal(resourcesConfig.postBody.name);\nexpect(responsePostResourceBody.customName).to.equal(resourcesConfig.postBody.customName);\nexpect(responsePostResourceBody.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\nexpect(responsePostResourceBody.from).to.equal(resourcesConfig.postBody.from);\nexpect(responsePostResourceBody.description).to.equal(resourcesConfig.postBody.description);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "4fd028a0-6f83-4162-a60a-7b9657dbb149",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Get /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Get /resources/{resourceId}",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4459d488-0153-4c69-9161-87542900ad1f",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Put /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Put /resources/{resourceId}",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.putResource(responsePostResourceBody._id, resourcesConfig.putBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.putBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.putBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.putBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.putBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.putBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2397f12-80d3-4510-afdc-1abd986803b6",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "Delete /resources/{resourceId}",
      "fullTitle": "Acceptance Tests for Resources Delete /resources/{resourceId}",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.deleteResource(responsePostResourceBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(responsePostResourceBody._id);\n    expect(res.body.name).to.equal(resourcesConfig.postBody.name);\n    expect(res.body.customName).to.equal(resourcesConfig.postBody.customName);\n    expect(res.body.fontIcon).to.equal(resourcesConfig.postBody.fontIcon);\n    expect(res.body.from).to.equal(resourcesConfig.postBody.from);\n    expect(res.body.description).to.equal(resourcesConfig.postBody.description);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "a2ff0991-83f6-414c-97d3-d9fb568f9ed5",
      "parentUUID": "03aff426-9945-407d-8c2a-c257de229f69",
      "skipped": false
    },
    {
      "title": "The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms The resource associated is the same that the resource created GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 47,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(resourceRes._id).to.equal(res.body.resourceId);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "0ceee338-ccd2-4eab-bef5-8c9023c1bb1e",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms the quantity is modify for the new value PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 49,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var quantityModify = 10;\nvar jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": quantityModify}, function (err, res) {\n        expect(res.body.resources[0].quantity).to.equal(quantityModify);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5e83f86e-0cd3-431d-9bba-d8c74245322f",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "return the resources GET /rooms/{:roomId}/resources",
      "fullTitle": "Smoke test for resources of rooms return the resources GET /rooms/{:roomId}/resources",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n            resourceId: resourceRes._id,\n            quantity: 5\n        };\n        var joinResource;\n        room_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n            joinResource = res.body;\n            room_resources.getResourcesByRoom(room._id, function (err, res) {\n                expect(res.body[0]._id).to.equal(joinResource.resources[0]._id);\n                done();\n            })\n        })",
      "err": {},
      "isRoot": false,
      "uuid": "36f1dab7-0970-400c-8614-08a3952f18e0",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "the resource is created POST /rooms/{:roomId}/resources/",
      "fullTitle": "Smoke test for resources of rooms the resource is created POST /rooms/{:roomId}/resources/",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n    expect(resourceRes._id).to.equal(res.body.resources[0].resourceId);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "18f30844-2d35-4835-998e-596f3044326d",
      "parentUUID": "040d4bdc-6038-4c93-b400-85fce3bdb115",
      "skipped": false
    },
    {
      "title": "Get /Rooms returns all rooms",
      "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms returns all rooms",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumRoomsExpected);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9a545ff4-a365-4d80-b3f9-64a599fdfece",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Put /Rooms/{roomId} returns the first room modified",
      "fullTitle": "Acceptance tests for Rooms endpoint Put /Rooms/{roomId} returns the first room modified",
      "timedOut": false,
      "duration": 65,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var modifiedRoom = {\n    displayName: 'GualyVc',\n    customDisplayName: 'GualyVc'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    var putRoomBody = res.body;\n    expect(putRoomBody.displayName).to.equal(modifiedRoom.displayName)\n    expect(putRoomBody.customDisplayName).to.equal(modifiedRoom.customDisplayName)\n    expect(putRoomBody._id).to.be.equal(room._id)\n    expect(putRoomBody.serviceId).to.be.equal(room.serviceId)\n    expect(putRoomBody.enable).to.be.equal(room.enable)\n    expect(res.status).to.equal(expectedStatus);\n    var recoverRoom = {\n        displayName: room.displayName,\n        customDisplayName: room.customDisplayName\n    };\n    rooms.putRoomsById(room._id, recoverRoom, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "da482acf-cca0-47b3-bd6b-e95912e846ec",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Get /Rooms/{roomId} - returns an specific Room by its Id",
      "fullTitle": "Acceptance tests for Rooms endpoint Get /Rooms/{roomId} - returns an specific Room by its Id",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRoomsById(room._id, function (err, res) {\n    var getRoomByIdBody = res.body;\n    expect(getRoomByIdBody._id).to.equal(room._id)\n    expect(getRoomByIdBody.displayName).to.equal(room.displayName)\n    expect(getRoomByIdBody.customDisplayName).to.equal(room.customDisplayName)\n    expect(getRoomByIdBody.serviceId).to.equal(room.serviceId)\n    expect(getRoomByIdBody.enable).to.equal(room.enable)\n    expect(getRoomByIdBody.Url).to.equal(room.Url)\n    expect(getRoomByIdBody.__v).to.equal(room.__v)\n    expect(getRoomByIdBody.locationId).to.equal(room.locationId)\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3e52cdd4-2f76-4013-8852-3f901718689b",
      "parentUUID": "36390fc1-9d88-4035-a335-99e4794fbd4d",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
      "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns resources previously created",
      "timedOut": false,
      "duration": 35,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0];\n    expect(res.status).to.equal(expectedStatus);\n    expect(resourceIdInARoom._id).to.equal(responsePost.body.resources[0]._id);\n    expect(resourceIdInARoom.quantity).to.equal(responsePost.body.resources[0].quantity)\n    expect(resourceIdInARoom.resourceId).to.equal(responsePost.body.resources[0].resourceId)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "23bbc198-89ee-402c-aa38-b1f36be5e0bf",
      "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
      "skipped": false
    },
    {
      "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
      "fullTitle": "Acceptance tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns a resource created",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "ace166a4-331a-4df2-9309-56f64996b50e",
      "parentUUID": "d3d640d0-fcb5-45b4-87de-aaa7b0a1c59d",
      "skipped": false
    },
    {
      "title": "Get /services",
      "fullTitle": "Acceptance test for Services Get /services",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body.length).to.be.at.least(minimumServices);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "6262a771-16af-41d3-8f01-162f7a61b929",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Post /services",
      "fullTitle": "Acceptance test for Services Post /services",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(postResponseStatus).to.equal(expectedStatus);\nexpect(postResponseBody.credential.username).to.equal(postBody.username);\nexpect(postResponseBody.serviceUrl.includes(postBody.hostname)).to.be.true;\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "4dd98505-cc1a-46a4-ad41-600a4ad03525",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}",
      "fullTitle": "Acceptance test for Services Get /services/{serviceId}",
      "timedOut": false,
      "duration": 43,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.credential.username).to.equal(postBody.username);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c2812d46-5c6b-4d27-bfca-368a7a127b48",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId}",
      "fullTitle": "Acceptance test for Services Delete /services/{serviceId}",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.deleteService(postResponseBody._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(postResponseBody._id);\n    expect(res.body.serviceUrl.includes(postBody.hostname)).to.be.true;\n    expect(res.body.type).to.equal(credentials.serviceType);\n    expect(res.body.name).to.equal(credentials.serviceName);\n    expect(res.body.version).to.equal(credentials.serviceVersion);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "93180082-4c26-43d8-acd0-fe125547ef4e",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}",
      "fullTitle": "Acceptance test for Services Get /services/{:serviceId}/rooms/{:roomId}",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getARoomOfAService(postResponseBody._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body._id).to.equal(room._id);\n    expect(res.body.serviceId).to.equal(postResponseBody._id);\n    expect(res.body.emailAddress).to.equal(room.emailAddress);\n    expect(res.body.displayName).to.equal(room.displayName);\n    expect(res.body.enabled).to.equal(room.enabled);\n    expect(res.body.locationId).to.equal(room.locationId);\n    expect(res.body.customDisplayName).to.equal(room.customDisplayName);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "223060df-ca9b-469c-955c-02e4453e8b99",
      "parentUUID": "34d8772e-1a63-495e-8311-7b88da5a8e05",
      "skipped": false
    },
    {
      "title": "Get /service-types returns 200",
      "fullTitle": "Acceptance test for Service-Types Get /service-types returns 200",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    expect(res.body[0].name).to.equal(serviceTypesJson.serviceName);\n    expect(res.body[0].version).to.equal(serviceTypesJson.serviceVersion);\n    expect(res.body[0].support[0]).to.equal(serviceTypesJson.support);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "acf2f721-4168-4ebf-8885-a6ec0776d456",
      "parentUUID": "501d7c3a-0539-452c-80ed-fa54e74f8fa1",
      "skipped": false
    },
    {
      "title": "And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have (Tarata) assigned to (Jalasoft/Planta Baja)",
      "timedOut": false,
      "duration": 114,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var locationJson = {\n                name: \"Jalasoft\",\n                customName: \"Jalasoft\",\n                description: \"bla bla\"\n            };\n            locations.postLocation(locationJson, function (err1, res1) {\n                idJala = res1.body._id;\n                var locationsTwo = {\n                    name: \"PlantaBaja\",\n                    customName: \"PlantaBaja\",\n                    parentId: res1.body._id\n                };\n                locations.postLocation(locationsTwo, function (err2, res2) {\n                    idPlantaBaja = res2.body._id;\n                    var jsonLocation = {\n                        locationId: res2.body._id\n                    };\n                    rooms.putRoomsById(idRoomTarata, jsonLocation, function (err, res) {\n                        done();\n                    });\n                });\n            });",
      "err": {},
      "isRoot": false,
      "uuid": "328ba63a-6a4d-49f7-b01c-291325132e15",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "And I have the location (JalasoftPlanta BajaPueblito)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have the location (JalasoftPlanta BajaPueblito)",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var locationsThree = {\n    name: \"Pueblito\",\n    customName: \"Pueblito\",\n    parentId: idPlantaBaja\n};\nlocations.postLocation(locationsThree, function (err, res) {\n    idPueblito = res.body._id;\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "111fb308-6541-4ff9-b54a-224e3b8daa14",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
      "fullTitle": "Given I have a disabled conference room (Tarata) And I have conference room (Quillacollo) is  assigned  to (JalasoftPlanta BajaPueblito)",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.putRoomsById(roomsRes[2]._id, {locationId: idPueblito}, function (err, res) {\n                done();\n            })",
      "err": {},
      "isRoot": false,
      "uuid": "1f0093fb-0118-4f9c-9f0a-4beee3c1d13e",
      "parentUUID": "52adac88-39fd-4971-8744-a5977a47c119",
      "skipped": false
    },
    {
      "title": "Then  Tarata is correctly assigned to the new location",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) Then  Tarata is correctly assigned to the new location",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resTarataPueblito.status).to.equal(expectedStatus);\nexpect(resTarataPueblito.body.locationId).to.equal(idPueblito);",
      "err": {},
      "isRoot": false,
      "uuid": "f94c2b36-520f-46b6-93ee-52a07e484d37",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And Tarata status is still disabled",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And Tarata status is still disabled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resTarataPueblito.body.enabled).to.be.false;",
      "err": {},
      "isRoot": false,
      "uuid": "2ba1c36b-0e74-42a1-bc3d-a77e8a1954e4",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta BajaPueblito) is 2",
      "timedOut": false,
      "duration": 19,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPueblito).forEach(y => value++);\n    expect(value).to.equal(2);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7ae5a4ff-ccd6-47bd-9595-1749526661ff",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
      "fullTitle": "When I assign (Tarata)  to (JalasoftPlanta BajaPueblito) And the total number of conference rooms assigned to (JalasoftPlanta Baja) is 0",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    var value = 0;\n    res.body.filter(x => x.locationId == idPlantaBaja).forEach(y => value++);\n    expect(value).to.equal(0);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3979c1b6-822a-494e-a327-d8876d1f3a15",
      "parentUUID": "a2357590-1c30-43f7-8ed1-1db01e0250e3",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/attendees{?filter}/ returns 200",
      "fullTitle": "Smoke test for Attendees Get /services/{:serviceId}/attendees{?filter}/ returns 200",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "attendees.getAttendees(serviceId, filter, function (err,res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "f62b08f2-5154-48bc-9a9b-65c262849168",
      "parentUUID": "1ab3f3ed-9426-40ce-b596-7c2f5e07f7ab",
      "skipped": false
    },
    {
      "title": "GET /locations",
      "fullTitle": "Smoke test for Locations GET /locations",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocation(function (err, res) {\n            expect(expectedStatus).to.equal(res.status);\n            done();\n        })",
      "err": {},
      "isRoot": false,
      "uuid": "984dff6c-3c52-4d82-b65c-1e93de6e1560",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Post /locations",
      "fullTitle": "Smoke test for Locations Post /locations",
      "timedOut": false,
      "duration": 37,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"name\": \"B201\",\n    \"customName\": \"B201\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    locations.delLocationById(res.body._id, function (err, res) {\n        done();\n    })\n});",
      "err": {},
      "isRoot": false,
      "uuid": "44f99945-121a-40a8-b807-d531edde184f",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Get /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Get /locations/{:locationId }",
      "timedOut": false,
      "duration": 14,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "locations.getLocationById(locationRes._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "69cfc5e8-d878-4dfc-9a42-6e8d0d46121d",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Put /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Put /locations/{:locationId }",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJson = {\n    \"customName\": \"Modify\"\n};\nlocations.putLocationById(locationRes._id, bodyJson, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "ac74865a-a9a9-4495-b9b9-50d8bfa05e25",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Delete /locations/{:locationId }",
      "fullTitle": "Smoke test for Locations Delete /locations/{:locationId }",
      "timedOut": false,
      "duration": 39,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyJsonDelete = {\n    \"name\": \"B20111\",\n    \"customName\": \"B20111\",\n    \"description\": \"this is the room\"\n};\nlocations.postLocation(bodyJsonDelete, function (err, res) {\n    locations.delLocationById(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9bed0c80-7714-4d50-9e7b-a21bbd8332be",
      "parentUUID": "ddf5113a-a195-45ec-bc6d-74c948b8e95b",
      "skipped": false
    },
    {
      "title": "Post /login returns 200",
      "fullTitle": "Smoke Tests for Login Post /login returns 200",
      "timedOut": false,
      "duration": 33,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "login.postLogin(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "d980f5e5-0551-46f1-940d-54ebb0048bf6",
      "parentUUID": "c7ef4c47-8fde-4e24-947f-2c679996dae8",
      "skipped": false
    },
    {
      "title": "- GET /rooms/{:roomId}/meetings",
      "fullTitle": "Smoke test for meetings - GET /rooms/{:roomId}/meetings",
      "timedOut": false,
      "duration": 28,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetings(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "79534c7d-5f34-4603-95a3-dd49b6688537",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithService(service._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fed288e4-6637-4c66-9e36-f306b5045e1b",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Post /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meeting_status).to.equal(expectedStatus);\n done();",
      "err": {},
      "isRoot": false,
      "uuid": "d916a71e-f983-4ce4-8134-e1eb2180d1d1",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Get /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "meetings.getMeetingsWithServiceById(service._id, room._id, meeting_id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "198eec69-b2a4-4154-9454-0042797b805f",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "fullTitle": "Smoke test for meetings Put /services/{:serviceId}/rooms/{:roomId}/meetings/{:meetingId} returns 200",
      "timedOut": false,
      "duration": 1687,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var meetingChanged = {\n    title: \"new title\",\n    start: moment().add(start+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    end: moment().add(end+10, 'hours').utc().format(\"YYYY-MM-DDTHH:mm:ss.SSS[Z]\"),\n    attendees: [\"Administrator@gualy.lab.local\"],\n    optionalAttendees: []\n};\nmeetings.putMeetingsWithServiceById(service._id, room._id, meeting_id, meetingChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "0437eb00-9fc6-4d04-8f72-8588ab3e6d9d",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "fullTitle": "Smoke test for meetings Delete /services/{:serviceId}/rooms/{:roomId}/meetings returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(meetingDel_status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "e5de0e57-6ef2-47dc-8242-2f7c976032fa",
      "parentUUID": "1516fb4c-2f96-403e-9d51-3ba8086bc676",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrders(serviceId, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9cbcd3d7-9e22-438c-b9fc-e38a0d2f1494",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Post /services/{:serviceId}/rooms/{:roomId}/out-of-orders returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(outOfOrder_status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "b0da9616-1db4-4b26-86d3-637224158750",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Get /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 27,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c6982c1d-56ab-47f2-bbf6-d1be65720d9b",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Put /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var bodyChanged = {\n    title: \"Out_of_Order\"\n};\noutOfOrders.putOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, bodyChanged, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f95d2f05-efd4-4bba-9ab8-f30a70cb582b",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "fullTitle": "Smoke test for Out-Of-Orders Delete /services/{:serviceId}/rooms/{:roomId}/out-of-orders/{:outOfOrderId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.deleteOutOfOrdersById(serviceId, room._id, outOfOrder_body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "c287b0b3-5fb4-4762-9475-c5a00a54adf4",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get /out-of-orders",
      "fullTitle": "Smoke test for Out-Of-Orders Get /out-of-orders",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "outOfOrders.getOutOfOrdersWithOutService(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5af23c7e-e53a-4c48-aaef-02d71bb8652c",
      "parentUUID": "9bf85ff6-fc63-48ac-83fb-5d8459fc807a",
      "skipped": false
    },
    {
      "title": "Get all resources /resources returns 200",
      "fullTitle": "Smoke Tests for Resources Get all resources /resources returns 200",
      "timedOut": false,
      "duration": 36,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResources(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "6b5d2577-3306-4dc4-8323-c2bd92f64464",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Post /resources returns 200",
      "fullTitle": "Smoke Tests for Resources Post /resources returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(resourceRes.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "45f4dc53-1af9-4769-80ef-30fbd4f7cf38",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Put /resources/{id} returns 200",
      "fullTitle": "Smoke Tests for Resources Put /resources/{id} returns 200",
      "timedOut": false,
      "duration": 38,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var idResource = resourceRes.body._id;\nvar newBody = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'Now this a Flag'\n};\nresources.putResource(idResource, newBody, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f06582c6-56e8-4d19-8edc-fb8f05570feb",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Delete /resources/{id} resturn 200",
      "fullTitle": "Smoke Tests for Resources Delete /resources/{id} resturn 200",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var body = {\n    name: 'Flag',\n    customName: 'FLAG',\n    fontIcon: 'fa fa-flag',\n    from: \"\",\n    description: 'This is a flag'\n};\nresources.postResources(body, function (err, res) {\n    resources.deleteResource(res.body._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    });\n});",
      "err": {},
      "isRoot": false,
      "uuid": "9ebc0050-9a33-4700-89a4-35d0eeb08822",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "Get a resource /resources/{id} returns 200",
      "fullTitle": "Smoke Tests for Resources Get a resource /resources/{id} returns 200",
      "timedOut": false,
      "duration": 18,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.getResource(resourceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "709edeb3-1865-46cc-acd0-d2bb01ca84e1",
      "parentUUID": "a9e3a7e3-ea7f-4c18-b13d-5a36889d3b3d",
      "skipped": false
    },
    {
      "title": "GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 58,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.getResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "a05f54e3-760b-4e2f-a16f-cdd5066af4c3",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms PUT /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 55,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.putResourceOfRoom(room._id, res.body.resources[0]._id, {\"quantity\": 10}, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "9e575534-e978-45f2-853d-2247edfb25d4",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
      "fullTitle": "Smoke test for resources of rooms DELETE /rooms/{:roomId}/resources/{:roomResourceId}",
      "timedOut": false,
      "duration": 52,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonJoin = {\n    resourceId: resourceRes._id,\n    quantity: 5\n};\nroom_resources.joinRoomResource(room._id, jsonJoin, function (err, res) {\n    room_resources.delResourceOfRoom(room._id, res.body.resources[0]._id, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n    })\n})",
      "err": {},
      "isRoot": false,
      "uuid": "bcbabfda-75e5-40ac-8f44-bbcf38db03e5",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "GET /rooms/{:roomId}/resources",
      "fullTitle": "Smoke test for resources of rooms GET /rooms/{:roomId}/resources",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "room_resources.getResourcesByRoom(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "e72b997b-91e8-4f89-9c1e-b197685d6c27",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "POST /rooms/{:roomId}/resources/",
      "fullTitle": "Smoke test for resources of rooms POST /rooms/{:roomId}/resources/",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var joinResourceToRoom = {\n    resourceId: resourceRes._id,\n    quantity: 8\n};\nroom_resources.joinRoomResource(room._id, joinResourceToRoom, function (err, res) {\n        expect(res.status).to.equal(expectedStatus);\n        done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "891c1a4e-bc8e-46fa-ae32-bf6c8b4eb0b6",
      "parentUUID": "7bed6588-269f-4464-8abb-cd743f0fb3e1",
      "skipped": false
    },
    {
      "title": "Get all rooms /rooms returns 200",
      "fullTitle": "Smoke Tests for Rooms Get all rooms /rooms returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRooms(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "e11d31d7-4100-4b17-97c6-158f733a858c",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Put /rooms/{id} returns 200",
      "fullTitle": "Smoke Tests for Rooms Put /rooms/{id} returns 200",
      "timedOut": false,
      "duration": 32,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var modifiedRoom = {\n    displayName: 'displayNameModified',\n    customDisplayName: 'customDisplayNameModified'\n};\nrooms.putRoomsById(room._id, modifiedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "4138848a-2e4c-4ca6-a080-ff171eb7e993",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Get a Room by Id /rooms/{id} returns 200",
      "fullTitle": "Smoke Tests for Rooms Get a Room by Id /rooms/{id} returns 200",
      "timedOut": false,
      "duration": 22,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "rooms.getRoomsById(room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "ad2cd194-20ff-450c-8a0a-cadb7e6d2088",
      "parentUUID": "834be87e-0939-44df-8915-d783d0073db2",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "timedOut": false,
      "duration": 29,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourcesOfRoomsOfServices(service._id, room._id, function (err, res) {\n    resourceIdInARoom = res.body[0]._id;\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "32678ab7-fab9-437f-bfbf-bf821294cc3b",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Post /services/{serviceId}/rooms/{roomId}/resources/ returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(responsePost.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "3a4809fe-427b-40a3-8188-fb846305e279",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Get /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "7d0a6184-5f18-45fc-984d-57f48eb30d84",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Put /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var putResourceById =\n    {\n        \"quantity\": 5\n    };\nservices.putResourceByIdOfRoomsOfServices(service._id, room._id, resourceIdInARoom, putResourceById, function (err, res) {\n    expect(res.status).to.equal(expectedStatus)\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "bd59238f-4c25-4fa6-a322-19f3ec3f01ce",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "fullTitle": "Smoke tests for Services/Room/Resources endpoint Delete /services/{serviceId}/rooms/{roomId}/resources/{resourceId} returns 200",
      "timedOut": false,
      "duration": 26,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "resources.deleteResource(idResource, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "32f1ccee-7fa8-4eeb-b56e-41f50cf0b576",
      "parentUUID": "d7ed1d8c-f85d-46cc-a261-b4230779e5ba",
      "skipped": false
    },
    {
      "title": "Get /services returns 200",
      "fullTitle": "Smoke test for Services Get /services returns 200",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getServices(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "3ffb420f-ea64-4ed2-be5b-d6525c92700e",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Post /services returns 200",
      "fullTitle": "Smoke test for Services Post /services returns 200",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "expect(serviceRes.status).to.equal(expectedStatus);\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "fd89773a-6b73-4793-aca2-d2f8d3dfb674",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId} returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId} returns 200",
      "timedOut": false,
      "duration": 24,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getService(serviceRes.body._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7fdc2d42-d381-44d3-a036-7d9d40dd0513",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /services/{serviceId}/rooms/{roomId} returns 200",
      "fullTitle": "Smoke test for Services Get /services/{serviceId}/rooms/{roomId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "services.getARoomOfAService(serviceRes.body._id, room._id, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "b9a169d9-d73b-4ead-8f06-035c2dfcaff7",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "PUT /services/{serviceId}/rooms/{roomId} returns 200",
      "fullTitle": "Smoke test for Services PUT /services/{serviceId}/rooms/{roomId} returns 200",
      "timedOut": false,
      "duration": 23,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var jsonUpdatedRoom = {\n    quantity: 11,\n};\nservices.putARoomOfAService(serviceRes.body._id, room._id, jsonUpdatedRoom, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n})",
      "err": {},
      "isRoot": false,
      "uuid": "ee9b7c8a-891c-4a12-a256-1ba056d5c7e1",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Delete /services/{serviceId} returns 200",
      "fullTitle": "Smoke test for Services Delete /services/{serviceId} returns 200",
      "timedOut": false,
      "duration": 21,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var idService = serviceRes.body._id;\nservices.deleteService(idService, function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done()\n});",
      "err": {},
      "isRoot": false,
      "uuid": "f7263521-55e2-4e6c-8b3f-9c58844c0787",
      "parentUUID": "21d2690a-1860-4fe9-9cd4-bb7f7852c5ff",
      "skipped": false
    },
    {
      "title": "Get /service-types returns 200",
      "fullTitle": "Smoke test for Service-Types Get /service-types returns 200",
      "timedOut": false,
      "duration": 17,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "serviceTypes.getServiceType(function (err, res) {\n    expect(res.status).to.equal(expectedStatus);\n    done();\n});",
      "err": {},
      "isRoot": false,
      "uuid": "7ba3755e-00aa-4f1b-9bc3-75faf8026acd",
      "parentUUID": "7533bd07-b375-4368-b06c-803cb9b673c5",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}